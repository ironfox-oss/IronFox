diff --git a/mobile/android/android-components/components/feature/addons/src/main/java/mozilla/components/feature/addons/AddonManager.kt b/mobile/android/android-components/components/feature/addons/src/main/java/mozilla/components/feature/addons/AddonManager.kt
index c21f63a00d..a8ea5237b6 100644
--- a/mobile/android/android-components/components/feature/addons/src/main/java/mozilla/components/feature/addons/AddonManager.kt
+++ b/mobile/android/android-components/components/feature/addons/src/main/java/mozilla/components/feature/addons/AddonManager.kt
@@ -83,7 +83,7 @@ class AddonManager(
      * the [addonsProvider] or querying web extension state from the engine / store.
      */
     @Throws(AddonManagerException::class)
-    @Suppress("TooGenericExceptionCaught")
+    @Suppress("TooGenericExceptionCaught", "UNUSED_PARAMETER")
     suspend fun getAddons(
         waitForPendingActions: Boolean = true,
         allowCache: Boolean = true,
@@ -113,7 +113,7 @@ class AddonManager(
             // Get all the featured add-ons not installed from provider.
             // NB: We're keeping translations only for the default locale.
             var featuredAddons = emptyList<Addon>()
-            try {
+/*            try {
                 val userLanguage = Locale.getDefault().language
                 val locales = listOf(userLanguage)
                 featuredAddons =
@@ -123,7 +123,7 @@ class AddonManager(
             } catch (throwable: Throwable) {
                 // Do not throw when we fail to fetch the featured add-ons since there can be installed add-ons.
                 logger.warn("Failed to get the featured add-ons", throwable)
-            }
+            }*/
 
             // Build a list of installed extensions that are not built-in extensions.
             val installedAddons = installedExtensions
diff --git a/mobile/android/fenix/app/build.gradle b/mobile/android/fenix/app/build.gradle
index d9a6045423..bf9c9237c6 100644
--- a/mobile/android/fenix/app/build.gradle
+++ b/mobile/android/fenix/app/build.gradle
@@ -80,10 +80,10 @@ android {
         buildConfigField "String", "VCS_HASH", "\"\""
         // This should be the "public" base URL of AMO.
         buildConfigField "String", "AMO_BASE_URL", "\"https://addons.mozilla.org\""
-        buildConfigField "String", "AMO_COLLECTION_NAME", "\"Extensions-for-Android\""
-        buildConfigField "String", "AMO_COLLECTION_USER", "\"mozilla\""
+        buildConfigField "String", "AMO_COLLECTION_NAME", "\"IronFox\""
+        buildConfigField "String", "AMO_COLLECTION_USER", "\"18588170\""
         // This should be the base URL used to call the AMO API.
-        buildConfigField "String", "AMO_SERVER_URL", "\"https://services.addons.mozilla.org\""
+        buildConfigField "String", "AMO_SERVER_URL", "\"\""
 
         def deepLinkSchemeValue = "fenix-dev"
         buildConfigField "String", "DEEP_LINK_SCHEME", "\"$deepLinkSchemeValue\""
