diff --git a/toolkit/mozapps/extensions/AddonManager.sys.mjs b/toolkit/mozapps/extensions/AddonManager.sys.mjs
index e09ea87de8..9c230f27db 100644
--- a/toolkit/mozapps/extensions/AddonManager.sys.mjs
+++ b/toolkit/mozapps/extensions/AddonManager.sys.mjs
@@ -84,6 +84,8 @@ const lazy = {};
 ChromeUtils.defineESModuleGetters(lazy, {
   AbuseReporter: "resource://gre/modules/AbuseReporter.sys.mjs",
   AddonRepository: "resource://gre/modules/addons/AddonRepository.sys.mjs",
+  GeckoViewWebExtension: "resource://gre/modules/GeckoViewWebExtension.sys.mjs",
+  EventDispatcher: "resource://gre/modules/Messaging.sys.mjs",
   Extension: "resource://gre/modules/Extension.sys.mjs",
   RemoteSettings: "resource://services-settings/remote-settings.sys.mjs",
   TelemetryTimestamps: "resource://gre/modules/TelemetryTimestamps.sys.mjs",
@@ -2346,6 +2348,22 @@ var AddonManagerInternal = {
     return promiseInstall;
   },
 
+  async installGeckoViewWebExtension(extensionUri) {
+    const installId = Services.uuid.generateUUID().toString();
+    let { extension } = await lazy.GeckoViewWebExtension.installWebExtension(
+        installId,
+        extensionUri
+    );
+    if (extension) {
+        await lazy.EventDispatcher.instance.sendRequest({
+            type: "GeckoView:WebExtension:OnInstalled",
+            extension,
+        });
+    } else {
+        console.error("Failed to install the extension: extension is null.");
+    }
+  },
+
   /**
    * Starts installation of an AddonInstall notifying the registered
    * web install listener of a blocked or started install.
@@ -2518,6 +2536,11 @@ var AddonManagerInternal = {
       );
 
       if (installAllowed) {
+        if (AppConstants.platform == "android") {
+          aInstall.cancel();
+          this.installGeckoViewWebExtension(aInstall.sourceURI);
+          return;
+        }
         startInstall("AMO");
       } else if (installPerm === Ci.nsIPermissionManager.DENY_ACTION) {
         // Block without prompt
diff --git a/toolkit/mozapps/extensions/components.conf b/toolkit/mozapps/extensions/components.conf
index 680aa57c07..1d0ce25519 100644
--- a/toolkit/mozapps/extensions/components.conf
+++ b/toolkit/mozapps/extensions/components.conf
@@ -32,14 +32,10 @@ Classes = [
         'esModule': 'resource://gre/modules/amWebAPI.sys.mjs',
         'constructor': 'WebAPI',
     },
+    {
+        'cid': '{7beb3ba8-6ec3-41b4-b67c-da89b8518922}',
+        'contract_ids': ['@mozilla.org/uriloader/content-handler;1?type=application/x-xpinstall'],
+        'esModule': 'resource://gre/modules/amContentHandler.sys.mjs',
+        'constructor': 'amContentHandler',
+    },
 ]
-
-if buildconfig.substs['MOZ_WIDGET_TOOLKIT'] != 'android':
-    Classes += [
-        {
-            'cid': '{7beb3ba8-6ec3-41b4-b67c-da89b8518922}',
-            'contract_ids': ['@mozilla.org/uriloader/content-handler;1?type=application/x-xpinstall'],
-            'esModule': 'resource://gre/modules/amContentHandler.sys.mjs',
-            'constructor': 'amContentHandler',
-        },
-    ]
diff --git a/toolkit/mozapps/extensions/internal/XPIInstall.sys.mjs b/toolkit/mozapps/extensions/internal/XPIInstall.sys.mjs
index 03c4f77791..34891b361c 100644
--- a/toolkit/mozapps/extensions/internal/XPIInstall.sys.mjs
+++ b/toolkit/mozapps/extensions/internal/XPIInstall.sys.mjs
@@ -4477,6 +4477,13 @@ export var XPIInstall = {
       return false;
     }
 
+    if (
+      AppConstants.platform == "android" &&
+      uri.prePath == "https://addons.mozilla.org"
+    ) {
+      return true;
+    }
+
     let requireWhitelist = Services.prefs.getBoolPref(
       PREF_XPI_WHITELIST_REQUIRED,
       true
