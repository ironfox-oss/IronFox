diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
index b800c22431..4e7e477336 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
@@ -1094,10 +1094,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
      * Indicates if the user have enabled trending search in search suggestions.
      */
     @VisibleForTesting
-    internal var trendingSearchSuggestionsEnabled by booleanPreference(
-        appContext.getPreferenceKey(R.string.pref_key_show_trending_search_suggestions),
-        default = true,
-    )
+    internal var trendingSearchSuggestionsEnabled = false
 
     /**
      * Returns true if trending searches should be shown to the user.
@@ -1694,11 +1691,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
     /**
      * Indicates if Merino content recommendations should be shown.
      */
-    var showContentRecommendations by lazyFeatureFlagPreference(
-        key = appContext.getPreferenceKey(R.string.pref_key_pocket_content_recommendations),
-        default = { FxNimbus.features.merinoRecommendations.value().enabled },
-        featureFlag = true,
-    )
+    var showContentRecommendations = false
 
     /**
      *  Whether or not to display the Pocket sponsored stories parameter secret settings.
@@ -1948,11 +1941,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
     /**
      * Indicates if Trending Searches is enabled.
      */
-    var isTrendingSearchesVisible by lazyFeatureFlagPreference(
-        key = appContext.getPreferenceKey(R.string.pref_key_enable_trending_searches),
-        default = { FxNimbus.features.trendingSearches.value().enabled },
-        featureFlag = true,
-    )
+    var isTrendingSearchesVisible = false
 
     /**
      * Adjust Activated User sent
@@ -2009,17 +1998,12 @@ class Settings(private val appContext: Context) : PreferencesHolder {
     /**
      * Indicates if Firefox Suggest is enabled.
      */
-    var enableFxSuggest by lazyFeatureFlagPreference(
-        key = appContext.getPreferenceKey(R.string.pref_key_enable_fxsuggest),
-        default = { FxNimbus.features.fxSuggest.value().enabled },
-        featureFlag = FeatureFlags.FX_SUGGEST,
-    )
+    var enableFxSuggest = false
 
     /**
      * Indicates if boosting AMP/wiki suggestions is enabled.
      */
-    val boostAmpWikiSuggestions: Boolean
-        get() = FxNimbus.features.fxSuggest.value().boostAmpWiki
+    val boostAmpWikiSuggestions: Boolean = false
 
     /**
      * Indicates first time engaging with signup
@@ -2033,22 +2017,14 @@ class Settings(private val appContext: Context) : PreferencesHolder {
      * Indicates if the user has chosen to show sponsored search suggestions in the awesomebar.
      * The default value is computed lazily, and based on whether Firefox Suggest is enabled.
      */
-    var showSponsoredSuggestions by lazyFeatureFlagPreference(
-        key = appContext.getPreferenceKey(R.string.pref_key_show_sponsored_suggestions),
-        default = { enableFxSuggest },
-        featureFlag = FeatureFlags.FX_SUGGEST,
-    )
+    var showSponsoredSuggestions = false
 
     /**
      * Indicates if the user has chosen to show search suggestions for web content in the
      * awesomebar. The default value is computed lazily, and based on whether Firefox Suggest
      * is enabled.
      */
-    var showNonSponsoredSuggestions by lazyFeatureFlagPreference(
-        key = appContext.getPreferenceKey(R.string.pref_key_show_nonsponsored_suggestions),
-        default = { enableFxSuggest },
-        featureFlag = FeatureFlags.FX_SUGGEST,
-    )
+    var showNonSponsoredSuggestions = false
 
     /**
      * Indicates that the user does not want warned of a translations
