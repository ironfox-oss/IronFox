diff --git a/mobile/android/fenix/app/proguard-rules.pro b/mobile/android/fenix/app/proguard-rules.pro
index a5ba234af1..669e4d9865 100644
--- a/mobile/android/fenix/app/proguard-rules.pro
+++ b/mobile/android/fenix/app/proguard-rules.pro
@@ -6,16 +6,16 @@
 
 # Recommended config via https://docs.sentry.io/clients/java/modules/android/#manual-integration
 # Since we don't obfuscate, we don't need to use their Gradle plugin to upload ProGuard mappings.
--keepattributes LineNumberTable,SourceFile
--dontwarn org.slf4j.**
--dontwarn javax.**
+#-keepattributes LineNumberTable,SourceFile
+#-dontwarn org.slf4j.**
+#-dontwarn javax.**
 
 # Our addition: this class is saved to disk via Serializable, which ProGuard doesn't like.
 # If we exclude this, upload silently fails (Sentry swallows a NPE so we don't crash).
 # I filed https://github.com/getsentry/sentry-java/issues/572
 #
 # If Sentry ever mysteriously stops working after we upgrade it, this could be why.
--keep class io.sentry.event.Event { *; }
+#-keep class io.sentry.event.Event { *; }
 
 ####################################################################################################
 # Android and GeckoView built-ins
@@ -73,53 +73,53 @@
 # Adjust
 ####################################################################################################
 
--keep public class com.adjust.sdk.** { *; }
--keep class com.google.android.gms.common.ConnectionResult {
-    int SUCCESS;
-}
--keep class com.google.android.gms.ads.identifier.AdvertisingIdClient {
-    com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getAdvertisingIdInfo(android.content.Context);
-}
--keep class com.google.android.gms.ads.identifier.AdvertisingIdClient$Info {
-    java.lang.String getId();
-    boolean isLimitAdTrackingEnabled();
-}
--keep public class com.android.installreferrer.** { *; }
--keep class dalvik.system.VMRuntime {
-    java.lang.String getRuntime();
-}
--keep class android.os.Build {
-    java.lang.String[] SUPPORTED_ABIS;
-    java.lang.String CPU_ABI;
-}
--keep class android.content.res.Configuration {
-    android.os.LocaledList getLocales();
-    java.util.Locale locale;
-}
--keep class android.os.LocaleList {
-    java.util.Locale get(int);
-}
+#-keep public class com.adjust.sdk.** { *; }
+#-keep class com.google.android.gms.common.ConnectionResult {
+#    int SUCCESS;
+#}
+#-keep class com.google.android.gms.ads.identifier.AdvertisingIdClient {
+#    com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getAdvertisingIdInfo(android.content.Context);
+#}
+#-keep class com.google.android.gms.ads.identifier.AdvertisingIdClient$Info {
+#    java.lang.String getId();
+#    boolean isLimitAdTrackingEnabled();
+#}
+#-keep public class com.android.installreferrer.** { *; }
+#-keep class dalvik.system.VMRuntime {
+#    java.lang.String getRuntime();
+#}
+#-keep class android.os.Build {
+#    java.lang.String[] SUPPORTED_ABIS;
+#    java.lang.String CPU_ABI;
+#}
+#-keep class android.content.res.Configuration {
+#    android.os.LocaledList getLocales();
+#    java.util.Locale locale;
+#}
+#-keep class android.os.LocaleList {
+#    java.util.Locale get(int);
+#}
 
 # Keep code generated from Glean Metrics
--keep class org.mozilla.fenix.GleanMetrics.** {  *; }
+#-keep class org.mozilla.fenix.GleanMetrics.** {  *; }
 
 # Keep motionlayout internal methods
 # https://github.com/mozilla-mobile/fenix/issues/2094
--keep class androidx.constraintlayout.** { *; }
+#-keep class androidx.constraintlayout.** { *; }
 
 # Keep adjust relevant classes
--keep class com.adjust.sdk.** { *; }
--keep class com.google.android.gms.common.ConnectionResult {
-    int SUCCESS;
-}
--keep class com.google.android.gms.ads.identifier.AdvertisingIdClient {
-    com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getAdvertisingIdInfo(android.content.Context);
-}
--keep class com.google.android.gms.ads.identifier.AdvertisingIdClient$Info {
-    java.lang.String getId();
-    boolean isLimitAdTrackingEnabled();
-}
--keep public class com.android.installreferrer.** { *; }
+#-keep class com.adjust.sdk.** { *; }
+#-keep class com.google.android.gms.common.ConnectionResult {
+#    int SUCCESS;
+#}
+#-keep class com.google.android.gms.ads.identifier.AdvertisingIdClient {
+#    com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getAdvertisingIdInfo(android.content.Context);
+#}
+#-keep class com.google.android.gms.ads.identifier.AdvertisingIdClient$Info {
+#    java.lang.String getId();
+#    boolean isLimitAdTrackingEnabled();
+#}
+#-keep public class com.android.installreferrer.** { *; }
 
 # Keep Android Lifecycle methods
 # https://bugzilla.mozilla.org/show_bug.cgi?id=1596302
@@ -135,5 +135,13 @@
 # Add explicit keep rules for Nimbus RustBuffer and related structs to avoid
 # overly-aggressive optimization when R8 fullMode is enabled, leading to crashes.
 ####################################################################################################
--keepattributes RuntimeVisibleAnnotations,RuntimeInvisibleAnnotations,RuntimeVisibleTypeAnnotations,RuntimeInvisibleTypeAnnotations,AnnotationDefault,InnerClasses,EnclosingMethod,Signature
--keep class org.mozilla.experiments.nimbus.internal.** { *; }
+#-keepattributes RuntimeVisibleAnnotations,RuntimeInvisibleAnnotations,RuntimeVisibleTypeAnnotations,RuntimeInvisibleTypeAnnotations,AnnotationDefault,InnerClasses,EnclosingMethod,Signature
+#-keep class org.mozilla.experiments.nimbus.internal.** { *; }
+
+####################################################################################################
+# Checker Framework
+####################################################################################################
+
+-dontwarn org.checkerframework.checker.nullness.qual.EnsuresNonNull
+-dontwarn org.checkerframework.checker.nullness.qual.EnsuresNonNullIf
+-dontwarn org.checkerframework.checker.nullness.qual.RequiresNonNull
diff --git a/mobile/android/fenix/app/src/main/AndroidManifest.xml b/mobile/android/fenix/app/src/main/AndroidManifest.xml
index be6741fab0..adfbe14beb 100644
--- a/mobile/android/fenix/app/src/main/AndroidManifest.xml
+++ b/mobile/android/fenix/app/src/main/AndroidManifest.xml
@@ -768,13 +768,13 @@
             android:name=".messaging.NotificationDismissedService"
             android:exported="false" />
 
-        <service
+<!--         <service
             android:name=".push.FirebasePushService"
             android:exported="false">
             <intent-filter>
                 <action android:name="com.google.firebase.MESSAGING_EVENT" />
             </intent-filter>
-        </service>
+        </service> -->
 
         <service
             android:name=".perf.ProfilerService"
@@ -788,7 +788,7 @@
             </intent-filter>
         </service>
 
-        <meta-data
+<!--        <meta-data
             android:name="firebase_messaging_auto_init_enabled"
             android:value="true" />
         <meta-data
@@ -796,7 +796,7 @@
             android:value="false" />
         <meta-data
             android:name="firebase_analytics_collection_deactivated"
-            android:value="true" />
+            android:value="true" /> -->
         <!-- Removes the default Workmanager  initialization so that we can use on-demand initializer. -->
         <provider
             android:name="androidx.startup.InitializationProvider"
@@ -811,14 +811,14 @@
 
         <!-- For adjust pre-installs -->
         <!-- https://dev.adjust.com/en/sdk/android/setup/preinstalled#system-installer-receiver-->
-        <receiver
+<!--        <receiver
             android:name="com.adjust.sdk.AdjustPreinstallReferrerReceiver"
             android:exported="true"
             tools:ignore="ExportedReceiver">
             <intent-filter>
                 <action android:name="com.attribution.SYSTEM_INSTALLER_REFERRER" />
             </intent-filter>
-        </receiver>
+        </receiver> -->
     </application>
 
 </manifest>
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/Components.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/Components.kt
index 1f2c7eb2d0..4d4b374e0f 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/Components.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/Components.kt
@@ -11,14 +11,14 @@ import androidx.compose.runtime.Composable
 import androidx.compose.runtime.ReadOnlyComposable
 import androidx.compose.ui.platform.LocalContext
 import androidx.core.app.NotificationManagerCompat
-import com.google.android.play.core.review.ReviewManagerFactory
+// import com.google.android.play.core.review.ReviewManagerFactory
 import mozilla.components.feature.addons.AddonManager
 import mozilla.components.feature.addons.amo.AMOAddonsProvider
 import mozilla.components.feature.addons.migration.DefaultSupportedAddonsChecker
 import mozilla.components.feature.addons.update.DefaultAddonUpdater
 import mozilla.components.feature.autofill.AutofillConfiguration
-import mozilla.components.lib.crash.store.CrashAction
-import mozilla.components.lib.crash.store.CrashMiddleware
+// import mozilla.components.lib.crash.store.CrashAction
+// import mozilla.components.lib.crash.store.CrashMiddleware
 import mozilla.components.lib.publicsuffixlist.PublicSuffixList
 import mozilla.components.support.base.android.NotificationsDelegate
 import mozilla.components.support.base.worker.Frequency
@@ -39,9 +39,9 @@ import org.mozilla.fenix.components.appstate.AppAction
 import org.mozilla.fenix.components.appstate.AppState
 import org.mozilla.fenix.components.appstate.setup.checklist.SetupChecklistState
 import org.mozilla.fenix.components.appstate.setup.checklist.getSetupChecklistCollection
-import org.mozilla.fenix.components.metrics.MetricsMiddleware
-import org.mozilla.fenix.crashes.CrashReportingAppMiddleware
-import org.mozilla.fenix.crashes.SettingsCrashReportCache
+// import org.mozilla.fenix.components.metrics.MetricsMiddleware
+// import org.mozilla.fenix.crashes.CrashReportingAppMiddleware
+// import org.mozilla.fenix.crashes.SettingsCrashReportCache
 import org.mozilla.fenix.datastore.pocketStoriesSelectedCategoriesDataStore
 import org.mozilla.fenix.distributions.DefaultDistributionBrowserStoreProvider
 import org.mozilla.fenix.distributions.DefaultDistributionProviderChecker
@@ -57,10 +57,10 @@ import org.mozilla.fenix.home.PocketMiddleware
 import org.mozilla.fenix.home.SettingsBackedPocketSettings
 import org.mozilla.fenix.home.blocklist.BlocklistHandler
 import org.mozilla.fenix.home.blocklist.BlocklistMiddleware
-import org.mozilla.fenix.home.middleware.HomeTelemetryMiddleware
+// import org.mozilla.fenix.home.middleware.HomeTelemetryMiddleware
 import org.mozilla.fenix.home.setup.store.DefaultSetupChecklistRepository
 import org.mozilla.fenix.home.setup.store.SetupChecklistPreferencesMiddleware
-import org.mozilla.fenix.home.setup.store.SetupChecklistTelemetryMiddleware
+// import org.mozilla.fenix.home.setup.store.SetupChecklistTelemetryMiddleware
 import org.mozilla.fenix.messaging.state.MessagingMiddleware
 import org.mozilla.fenix.nimbus.FxNimbus
 import org.mozilla.fenix.onboarding.FenixOnboarding
@@ -199,7 +199,7 @@ class Components(private val context: Context) {
     val publicSuffixList by lazyMonitored { PublicSuffixList(context) }
     val clipboardHandler by lazyMonitored { ClipboardHandler(context) }
     val performance by lazyMonitored { PerformanceComponent() }
-    val push by lazyMonitored { Push(context, analytics.crashReporter) }
+    val push by lazyMonitored { Push(context) }
     val wifiConnectionMonitor by lazyMonitored { WifiConnectionMonitor(context as Application) }
 
     val strictMode by lazyMonitored {
@@ -214,7 +214,7 @@ class Components(private val context: Context) {
 
     val playStoreReviewPromptController by lazyMonitored {
         PlayStoreReviewPromptController(
-            manager = ReviewManagerFactory.create(context),
+//            manager = ReviewManagerFactory.create(context),
             numberOfAppLaunches = { settings.numberOfAppLaunches },
         )
     }
@@ -269,7 +269,7 @@ class Components(private val context: Context) {
                     controller = nimbus.messaging,
                     settings = settings,
                 ),
-                MetricsMiddleware(
+/*                MetricsMiddleware(
                     metrics = analytics.metrics,
                     nimbusEventStore = nimbus.events,
                 ),
@@ -280,9 +280,9 @@ class Components(private val context: Context) {
                         currentTimeInMillis = { System.currentTimeMillis() },
                     ),
                 ),
-                HomeTelemetryMiddleware(),
+                HomeTelemetryMiddleware(),*/
                 SetupChecklistPreferencesMiddleware(DefaultSetupChecklistRepository(context)),
-                SetupChecklistTelemetryMiddleware(),
+//                SetupChecklistTelemetryMiddleware(),
                 ReviewPromptMiddleware(
                     isReviewPromptFeatureEnabled = { settings.customReviewPromptFeatureEnabled },
                     numberOfAppLaunches = { settings.numberOfAppLaunches },
@@ -297,7 +297,7 @@ class Components(private val context: Context) {
             ),
         ).also {
             it.dispatch(AppAction.SetupChecklistAction.Init)
-            it.dispatch(AppAction.CrashActionWrapper(CrashAction.Initialize))
+//            it.dispatch(AppAction.CrashActionWrapper(CrashAction.Initialize))
         }
     }
 
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
index 312b5b3de3..03b1108803 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
@@ -363,7 +363,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
      */
     var customReviewPromptFeatureEnabled by lazyFeatureFlagPreference(
         appContext.getPreferenceKey(R.string.pref_key_custom_review_prompt_enabled),
-        featureFlag = true,
+        featureFlag = false,
         default = { FxNimbus.features.customReviewPrompt.value().enabled },
     )
 
@@ -2152,7 +2152,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
      */
     var shouldShowMarketingOnboarding by booleanPreference(
         appContext.getPreferenceKey(R.string.pref_key_should_show_marketing_onboarding),
-        default = true,
+        default = false,
     )
 
     var shouldUseComposableToolbar by lazyFeatureFlagPreference(
diff --git a/mobile/android/fenix/app/src/main/res/xml/preferences.xml b/mobile/android/fenix/app/src/main/res/xml/preferences.xml
index 5058f40c0b..0c0a575f53 100644
--- a/mobile/android/fenix/app/src/main/res/xml/preferences.xml
+++ b/mobile/android/fenix/app/src/main/res/xml/preferences.xml
@@ -206,10 +206,10 @@
         android:title="@string/preferences_category_about"
         app:iconSpaceReserved="false"
         android:layout="@layout/preference_category_no_icon_style">
-        <androidx.preference.Preference
+        <!-- <androidx.preference.Preference
             android:key="@string/pref_key_rate"
             app:iconSpaceReserved="false"
-            android:title="@string/preferences_rate" />
+            android:title="@string/preferences_rate" /> -->
 
         <androidx.preference.Preference
             android:key="@string/pref_key_about"
diff --git a/mobile/android/fenix/app/src/main/java/com/google/firebase/messaging/FirebaseMessagingService.java b/mobile/android/fenix/app/src/main/java/com/google/firebase/messaging/FirebaseMessagingService.java
new file mode 100644
index 0000000000..4d5fd8153d
--- /dev/null
+++ b/mobile/android/fenix/app/src/main/java/com/google/firebase/messaging/FirebaseMessagingService.java
@@ -0,0 +1,42 @@
+// Copyright 2020 Google LLC
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+package com.google.firebase.messaging;
+
+import android.app.Service;
+import android.content.Intent;
+import android.os.Binder;
+import android.os.IBinder;
+
+public class FirebaseMessagingService extends Service {
+
+    private final IBinder mBinder = new Binder();
+
+    public void onMessageReceived(RemoteMessage message) {
+    }
+
+    public void onMessageSent(String msgId) {
+    }
+
+    public void onNewToken(String token) {
+    }
+
+    public void onSendError(String msgId, Exception exception) {
+    }
+
+    @Override
+    public IBinder onBind(Intent intent) {
+        return mBinder;
+    }
+
+}
diff --git a/mobile/android/fenix/app/src/main/java/com/google/firebase/messaging/RemoteMessage.java b/mobile/android/fenix/app/src/main/java/com/google/firebase/messaging/RemoteMessage.java
new file mode 100644
index 0000000000..9ad59a31e4
--- /dev/null
+++ b/mobile/android/fenix/app/src/main/java/com/google/firebase/messaging/RemoteMessage.java
@@ -0,0 +1,33 @@
+// Copyright 2020 Google LLC
+//
+// Licensed under the Apache License, Version 2.0 (the "License");
+// you may not use this file except in compliance with the License.
+// You may obtain a copy of the License at
+//
+//      http://www.apache.org/licenses/LICENSE-2.0
+//
+// Unless required by applicable law or agreed to in writing, software
+// distributed under the License is distributed on an "AS IS" BASIS,
+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+// See the License for the specific language governing permissions and
+// limitations under the License.
+package com.google.firebase.messaging;
+
+import android.os.Parcel;
+import android.os.Parcelable;
+import java.util.Map;
+
+public class RemoteMessage implements Parcelable {
+
+    public int describeContents() {
+        return 0;
+    }
+
+    public void writeToParcel(Parcel out, int flags) {
+    }
+
+    public Map<String, String> getData() {
+        return null;
+    }
+
+}
diff --git a/mobile/android/fenix/app/src/main/java/mozilla/components/lib/push/firebase/AbstractFirebasePushService.kt b/mobile/android/fenix/app/src/main/java/mozilla/components/lib/push/firebase/AbstractFirebasePushService.kt
new file mode 100644
index 0000000000..b50a6f03a2
--- /dev/null
+++ b/mobile/android/fenix/app/src/main/java/mozilla/components/lib/push/firebase/AbstractFirebasePushService.kt
@@ -0,0 +1,32 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+package mozilla.components.lib.push.firebase
+
+import android.content.Context
+import com.google.firebase.messaging.FirebaseMessagingService
+import com.google.firebase.messaging.RemoteMessage
+import mozilla.components.concept.push.PushService
+
+abstract class AbstractFirebasePushService() : FirebaseMessagingService(), PushService {
+
+    override fun start(context: Context) {
+    }
+
+    override fun onNewToken(newToken: String) {
+    }
+
+    override fun onMessageReceived(remoteMessage: RemoteMessage?) {
+    }
+
+    final override fun stop() {
+    }
+
+    override fun deleteToken() {
+    }
+
+    override fun isServiceAvailable(context: Context): Boolean {
+        return false
+    }
+}
