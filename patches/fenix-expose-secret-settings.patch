diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/toolbar/DefaultToolbarMenu.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/toolbar/DefaultToolbarMenu.kt
index e7e19273f9..8572b6bfdb 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/toolbar/DefaultToolbarMenu.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/toolbar/DefaultToolbarMenu.kt
@@ -179,7 +179,7 @@ open class DefaultToolbarMenu(
     @VisibleForTesting(otherwise = PRIVATE)
     fun shouldShowOpenInRegularTab(): Boolean = selectedSession?.let { session ->
         // This feature is gated behind Nightly for the time being.
-        Config.channel.isNightlyOrDebug &&
+        true &&
             // This feature is explicitly for users opening links in private tabs.
             context.settings().openLinksInAPrivateTab &&
             // and is only visible in private tabs.
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SecretSettingsFragment.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SecretSettingsFragment.kt
index 752d111544..895ee5b7b5 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SecretSettingsFragment.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SecretSettingsFragment.kt
@@ -64,7 +64,7 @@ class SecretSettingsFragment : PreferenceFragmentCompat() {
         }
 
         requirePreference<SwitchPreference>(R.string.pref_key_enable_composable_toolbar).apply {
-            isVisible = Config.channel.isDebug
+            isVisible = true
             isChecked = context.settings().shouldUseComposableToolbar
             onPreferenceChangeListener = SharedPreferenceUpdater()
         }
@@ -86,13 +86,13 @@ class SecretSettingsFragment : PreferenceFragmentCompat() {
         }
 
         requirePreference<SwitchPreference>(R.string.pref_key_enable_menu_redesign).apply {
-            isVisible = Config.channel.isNightlyOrDebug
+            isVisible = true
             isChecked = context.settings().enableMenuRedesign
             onPreferenceChangeListener = SharedPreferenceUpdater()
         }
 
         requirePreference<SwitchPreference>(R.string.pref_key_enable_homepage_searchbar).apply {
-            isVisible = Config.channel.isNightlyOrDebug
+            isVisible = true
             isChecked = context.settings().enableHomepageSearchBar
             onPreferenceChangeListener = SharedPreferenceUpdater()
         }
@@ -104,7 +104,7 @@ class SecretSettingsFragment : PreferenceFragmentCompat() {
         }
 
         requirePreference<SwitchPreference>(R.string.pref_key_enable_homepage_as_new_tab).apply {
-            isVisible = Config.channel.isNightlyOrDebug
+            isVisible = true
             isChecked = context.settings().enableHomepageAsNewTab
             onPreferenceChangeListener = SharedPreferenceUpdater()
         }
@@ -120,7 +120,7 @@ class SecretSettingsFragment : PreferenceFragmentCompat() {
         }
 
         requirePreference<SwitchPreference>(R.string.pref_key_enable_unified_trust_panel).apply {
-            isVisible = Config.channel.isNightlyOrDebug
+            isVisible = true
             isChecked = context.settings().enableUnifiedTrustPanel
             onPreferenceChangeListener = SharedPreferenceUpdater()
         }
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
index 774d43efab..fe8b274796 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
@@ -436,7 +436,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
     var privateBrowsingLockedFeatureEnabled by lazyFeatureFlagPreference(
         key = appContext.getPreferenceKey(R.string.pref_key_private_browsing_locked_enabled),
         featureFlag = true,
-        default = { FxNimbus.features.privateBrowsingLock.value().enabled },
+        default = { true },
     )
 
     var privateBrowsingModeLocked by booleanPreference(
@@ -586,7 +586,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
      */
     var isShortcutSuggestionsVisible by lazyFeatureFlagPreference(
         key = appContext.getPreferenceKey(R.string.pref_key_enable_shortcuts_suggestions),
-        default = { FxNimbus.features.topSitesSuggestions.value().enabled },
+        default = { true },
         featureFlag = true,
     )
 
@@ -1736,7 +1736,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
             "en-CA",
             "fr-CA",
         )
-        val currentlyEnabledLanguages = if (Config.channel.isNightlyOrDebug) {
+        val currentlyEnabledLanguages = if (true) {
             releaseEnabledLanguages + SharedPrefsAddressesDebugLocalesRepository(context)
                 .getAllEnabledLocales().map { it.langTag }
         } else {
@@ -1912,7 +1912,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
 
     var shouldUseComposableToolbar by lazyFeatureFlagPreference(
         key = appContext.getPreferenceKey(R.string.pref_key_enable_composable_toolbar),
-        default = { FxNimbus.features.composableToolbar.value().enabled },
+        default = { false },
         featureFlag = true,
     )
 
@@ -1922,7 +1922,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
     @VisibleForTesting
     internal var toolbarRedesignEnabled by booleanPreference(
         appContext.getPreferenceKey(R.string.pref_key_enable_toolbar_redesign),
-        default = { FxNimbus.features.toolbarRedesignOption.value().showOptions },
+        default = { true },
     )
 
     /**
@@ -2032,7 +2032,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
      */
     var enableComposeHomepage by lazyFeatureFlagPreference(
         key = appContext.getPreferenceKey(R.string.pref_key_enable_compose_homepage),
-        default = { FxNimbus.features.composeHomepage.value().enabled },
+        default = { false },
         featureFlag = true,
     )
 
@@ -2041,7 +2041,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
      */
     var enableMenuRedesign by lazyFeatureFlagPreference(
         key = appContext.getPreferenceKey(R.string.pref_key_enable_menu_redesign),
-        default = { FxNimbus.features.menuRedesign.value().enabled },
+        default = { false },
         featureFlag = true,
     )
 
@@ -2050,7 +2050,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
      */
     var enableHomepageAsNewTab by lazyFeatureFlagPreference(
         key = appContext.getPreferenceKey(R.string.pref_key_enable_homepage_as_new_tab),
-        default = { FxNimbus.features.homepageAsNewTab.value().enabled },
+        default = { false },
         featureFlag = true,
     )
 
@@ -2059,7 +2059,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
      */
     var enableHomepageSearchBar by lazyFeatureFlagPreference(
         key = appContext.getPreferenceKey(R.string.pref_key_enable_homepage_searchbar),
-        default = { FxNimbus.features.homepageSearchBar.value().enabled },
+        default = { false },
         featureFlag = true,
     )
 
