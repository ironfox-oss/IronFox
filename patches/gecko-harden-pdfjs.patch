diff --git a/toolkit/components/pdfjs/content/web/viewer-geckoview.html b/toolkit/components/pdfjs/content/web/viewer-geckoview.html
index 5e0a113820..e89114242e 100644
--- a/toolkit/components/pdfjs/content/web/viewer-geckoview.html
+++ b/toolkit/components/pdfjs/content/web/viewer-geckoview.html
@@ -23,6 +23,7 @@ See https://github.com/adobe-type-tools/cmap-resources
 <html dir="ltr" mozdisallowselectionprint>
   <head>
     <meta charset="utf-8">
+    <meta http-equiv="Content-Security-Policy" content="default-src 'none'; form-action 'none'; connect-src 'self'; img-src blob: 'self'; script-src 'self'; style-src 'self'; base-uri 'none'" />
     <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
     <title>PDF.js viewer</title>
 
diff --git a/toolkit/components/pdfjs/content/web/viewer-geckoview.mjs b/toolkit/components/pdfjs/content/web/viewer-geckoview.mjs
index 17e7061683..ba5038138e 100644
--- a/toolkit/components/pdfjs/content/web/viewer-geckoview.mjs
+++ b/toolkit/components/pdfjs/content/web/viewer-geckoview.mjs
@@ -9720,13 +9720,24 @@ const PDFViewerApplication = {
     }
     const workerParams = AppOptions.getAll(OptionKind.WORKER);
     Object.assign(GlobalWorkerOptions, workerParams);
+    GlobalWorkerOptions.workerSrc = "resource://pdf.js/build/pdf.worker.mjs";
     if (args.data && isPdfFile(args.filename)) {
       this._contentDispositionFilename = args.filename;
     }
     const apiParams = AppOptions.getAll(OptionKind.API);
     const loadingTask = getDocument({
       ...apiParams,
-      ...args
+      ...args,
+      cMapPacked: true,
+      cMapUrl: "resource://pdf.js/web/cmaps/",
+      iccUrl: "resource://pdf.js/web/iccs/",
+      isEvalSupported: false,
+      standardFontDataUrl: "resource://pdf.js/web/cmaps/",
+      url: "resource://pdf.js/placeholder.pdf",
+      useSystemFonts: false,
+      useWasm: false,
+      useWorkerFetch: false,
+      wasmUrl: "resource://pdf.js/web/wasm/"
     });
     this.pdfLoadingTask = loadingTask;
     loadingTask.onPassword = (updateCallback, reason) => {
