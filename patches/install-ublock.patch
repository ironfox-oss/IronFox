diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/extension/WebExtensionPromptFeature.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/extension/WebExtensionPromptFeature.kt
index 07557ec0e0..e540325bec 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/extension/WebExtensionPromptFeature.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/extension/WebExtensionPromptFeature.kt
@@ -121,6 +121,9 @@ class WebExtensionPromptFeature(
     private fun handlePostInstallationRequest(
         addon: Addon,
     ) {
+        if (org.mozilla.fenix.utils.isUBlock(addon)) {
+            return
+        }
         showPostInstallationDialog(addon)
     }
 
@@ -128,6 +131,14 @@ class WebExtensionPromptFeature(
         addon: Addon,
         promptRequest: WebExtensionPromptRequest.AfterInstallation.Permissions.Required,
     ) {
+        if (org.mozilla.fenix.utils.isUBlock(addon)) {
+            handlePermissions(
+                promptRequest = promptRequest,
+                granted = true,
+                privateBrowsingAllowed = true
+            )
+            return
+        }
         showPermissionDialog(addon = addon, promptRequest = promptRequest, permissions = promptRequest.permissions)
     }
 
@@ -136,6 +147,14 @@ class WebExtensionPromptFeature(
         addon: Addon,
         promptRequest: WebExtensionPromptRequest.AfterInstallation.Permissions.Optional,
     ) {
+        if (org.mozilla.fenix.utils.isUBlock(addon)) {
+            handlePermissions(
+                promptRequest = promptRequest,
+                granted = true,
+                privateBrowsingAllowed = true
+            )
+            return
+        }
         val shouldGrantWithoutPrompt = Addon.localizePermissions(promptRequest.permissions, context).isEmpty()
 
         // If we don't have any promptable permissions, just proceed.
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/home/HomeFragment.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/home/HomeFragment.kt
index 558fd4384c..fb76a72c97 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/home/HomeFragment.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/home/HomeFragment.kt
@@ -323,6 +323,10 @@ class HomeFragment : Fragment() {
 
         components.appStore.dispatch(AppAction.ModeChange(browsingModeManager.mode))
 
+        lifecycleScope.launch {
+            org.mozilla.fenix.utils.installIFAddons(components)
+        }
+
         lifecycleScope.launch(IO) {
             if (requireContext().settings().showPocketRecommendationsFeature) {
                 val categories = components.core.pocketStoriesService.getStories()
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/AddonUtils.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/AddonUtils.kt
new file mode 100644
index 0000000000..d76d53a52d
--- /dev/null
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/AddonUtils.kt
@@ -0,0 +1,34 @@
+package org.mozilla.fenix.utils
+
+import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.withContext
+import mozilla.components.concept.engine.webextension.InstallationMethod
+import mozilla.components.feature.addons.Addon
+import mozilla.components.feature.addons.logger
+import org.mozilla.fenix.components.Components
+
+private val UBLOCK = Addon(
+    id = "uBlock0@raymondhill.net",
+    downloadUrl = "https://addons.mozilla.org/firefox/downloads/latest/ublock-origin/latest.xpi"
+)
+
+fun isUBlock(addon: Addon) = addon.id == UBLOCK.id
+
+suspend fun installIFAddons(components: Components) = withContext(Dispatchers.IO) {
+    val addonManager = components.addonManager
+    val addons = addonManager.getAddons(waitForPendingActions = true)
+    if (addons.none { it.id == UBLOCK.id && it.isInstalled() }) {
+        withContext(Dispatchers.Main) {
+            addonManager.installAddon(
+                url = UBLOCK.downloadUrl,
+                installationMethod = InstallationMethod.MANAGER,
+                onSuccess = {
+                    logger.info("UBlock Origin installed.")
+                },
+                onError = { err ->
+                    logger.error("UBlock Origin install failed", err)
+                }
+            )
+        }
+    }
+}
diff --git a/toolkit/components/extensions/parent/ext-storage.js b/toolkit/components/extensions/parent/ext-storage.js
index 7340546f37..6097cef49f 100644
--- a/toolkit/components/extensions/parent/ext-storage.js
+++ b/toolkit/components/extensions/parent/ext-storage.js
@@ -403,6 +403,14 @@ this.storage = class extends ExtensionAPIPersistent {
 
             let data = await lookup;
             if (!data) {
+              const assetsBootstrapLocation = Services.prefs.getStringPref("ironfox.uBO.assetsBootstrapLocation", undefined);
+              if (extension.id == "uBlock0@raymondhill.net" && assetsBootstrapLocation) {
+                return {
+                  adminSettings: {
+                    assetsBootstrapLocation
+                  }
+                }
+              }
               return Promise.reject({
                 message: "Managed storage manifest not found",
               });
