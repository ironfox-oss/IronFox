diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
index 9197b274db..16ef08e767 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
@@ -176,10 +176,10 @@ class Settings(private val appContext: Context) : PreferencesHolder {
     /**
      * Indicates whether or not top sites should be shown on the home screen.
      */
-    var showTopSitesFeature by lazyFeatureFlagPreference(
+    var showTopSitesFeature by booleanPreference(
         appContext.getPreferenceKey(R.string.pref_key_show_top_sites),
-        featureFlag = true,
-        default = { homescreenSections[HomeScreenSection.TOP_SITES] == true },
+//        featureFlag = true,
+        default = true,
     )
 
     var numberOfAppLaunches by intPreference(
@@ -363,10 +363,10 @@ class Settings(private val appContext: Context) : PreferencesHolder {
         default = false,
     )
 
-    var showCollectionsPlaceholderOnHome by booleanPreference(
-        appContext.getPreferenceKey(R.string.pref_key_show_collections_placeholder_home),
-        default = true,
-    )
+    var showCollectionsPlaceholderOnHome = false
+//        appContext.getPreferenceKey(R.string.pref_key_show_collections_placeholder_home),
+//        default = true,
+//    )
 
     val isCrashReportingEnabled: Boolean
         get() = isCrashReportEnabledInBuild &&
@@ -1149,10 +1149,10 @@ class Settings(private val appContext: Context) : PreferencesHolder {
         default = true,
     )
 
-    var defaultTopSitesAdded by booleanPreference(
-        appContext.getPreferenceKey(R.string.default_top_sites_added),
-        default = false,
-    )
+    var defaultTopSitesAdded = true
+//        appContext.getPreferenceKey(R.string.default_top_sites_added),
+//        default = false,
+//    )
 
     var shouldShowSearchSuggestionsInPrivate by booleanPreference(
         appContext.getPreferenceKey(R.string.pref_key_show_search_suggestions_in_private),
@@ -1660,10 +1660,10 @@ class Settings(private val appContext: Context) : PreferencesHolder {
         get() =
             FxNimbus.features.homescreen.value().sectionsEnabled
 
-    var historyMetadataUIFeature by lazyFeatureFlagPreference(
+    var historyMetadataUIFeature by booleanPreference(
         appContext.getPreferenceKey(R.string.pref_key_history_metadata_feature),
-        default = { homescreenSections[HomeScreenSection.RECENT_EXPLORATIONS] == true },
-        featureFlag = true,
+        default = false,
+//        featureFlag = true,
     )
 
     /**
@@ -1687,19 +1687,19 @@ class Settings(private val appContext: Context) : PreferencesHolder {
     /**
      * Indicates if the recent tabs functionality should be visible.
      */
-    var showRecentTabsFeature by lazyFeatureFlagPreference(
+    var showRecentTabsFeature by booleanPreference(
         appContext.getPreferenceKey(R.string.pref_key_recent_tabs),
-        featureFlag = true,
-        default = { homescreenSections[HomeScreenSection.JUMP_BACK_IN] == true },
+//        featureFlag = true,
+        default = false,
     )
 
     /**
      * Indicates if the recent saved bookmarks functionality should be visible.
      */
-    var showBookmarksHomeFeature by lazyFeatureFlagPreference(
+    var showBookmarksHomeFeature by booleanPreference(
         appContext.getPreferenceKey(R.string.pref_key_customization_bookmarks),
-        default = { homescreenSections[HomeScreenSection.BOOKMARKS] == true },
-        featureFlag = true,
+        default = false,
+//        featureFlag = true,
     )
 
     var signedInFxaAccount by booleanPreference(
