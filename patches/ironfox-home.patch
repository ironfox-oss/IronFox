diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/FenixApplication.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/FenixApplication.kt
index 13db9f3c83..7964a7af07 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/FenixApplication.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/FenixApplication.kt
@@ -340,7 +340,7 @@ open class FenixApplication : LocaleAwareApplication(), Provider {
                         // we can prevent with this.
                         components.core.topSitesStorage.getTopSites(
                             totalSites = components.settings.topSitesMaxLimit,
-                            frecencyConfig = if (FxNimbus.features.homepageHideFrecentTopSites.value().enabled) {
+                            frecencyConfig = if (true) {
                                 null
                             } else {
                                 TopSitesFrecencyConfig(
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/home/topsites/TopSitesConfigCreator.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/home/topsites/TopSitesConfigCreator.kt
index 48b312d257..92b3b71f71 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/home/topsites/TopSitesConfigCreator.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/home/topsites/TopSitesConfigCreator.kt
@@ -36,7 +36,7 @@ internal fun getTopSitesConfig(
     return {
         TopSitesConfig(
             totalSites = settings.topSitesMaxLimit,
-            frecencyConfig = if (FxNimbus.features.homepageHideFrecentTopSites.value().enabled) {
+            frecencyConfig = if (true) {
                 null
             } else {
                 TopSitesFrecencyConfig(
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
index 9197b274db..f101f8fd08 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
@@ -179,7 +179,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
     var showTopSitesFeature by lazyFeatureFlagPreference(
         appContext.getPreferenceKey(R.string.pref_key_show_top_sites),
         featureFlag = true,
-        default = { homescreenSections[HomeScreenSection.TOP_SITES] == true },
+        default = { true },
     )
 
     var numberOfAppLaunches by intPreference(
@@ -365,7 +365,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
 
     var showCollectionsPlaceholderOnHome by booleanPreference(
         appContext.getPreferenceKey(R.string.pref_key_show_collections_placeholder_home),
-        default = true,
+        default = false,
     )
 
     val isCrashReportingEnabled: Boolean
@@ -1151,7 +1151,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
 
     var defaultTopSitesAdded by booleanPreference(
         appContext.getPreferenceKey(R.string.default_top_sites_added),
-        default = false,
+        default = true,
     )
 
     var shouldShowSearchSuggestionsInPrivate by booleanPreference(
@@ -1662,7 +1662,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
 
     var historyMetadataUIFeature by lazyFeatureFlagPreference(
         appContext.getPreferenceKey(R.string.pref_key_history_metadata_feature),
-        default = { homescreenSections[HomeScreenSection.RECENT_EXPLORATIONS] == true },
+        default = { false },
         featureFlag = true,
     )
 
@@ -1690,7 +1690,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
     var showRecentTabsFeature by lazyFeatureFlagPreference(
         appContext.getPreferenceKey(R.string.pref_key_recent_tabs),
         featureFlag = true,
-        default = { homescreenSections[HomeScreenSection.JUMP_BACK_IN] == true },
+        default = { false },
     )
 
     /**
@@ -1698,7 +1698,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
      */
     var showBookmarksHomeFeature by lazyFeatureFlagPreference(
         appContext.getPreferenceKey(R.string.pref_key_customization_bookmarks),
-        default = { homescreenSections[HomeScreenSection.BOOKMARKS] == true },
+        default = { false },
         featureFlag = true,
     )
 
