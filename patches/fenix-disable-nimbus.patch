diff --git a/mobile/android/fenix/app/nimbus.fml.yaml b/mobile/android/fenix/app/nimbus.fml.yaml
index 15cacaa7c5..f06b7229f3 100644
--- a/mobile/android/fenix/app/nimbus.fml.yaml
+++ b/mobile/android/fenix/app/nimbus.fml.yaml
@@ -13,15 +13,15 @@ includes:
   - onboarding.fml.yaml
   - messaging-fenix.fml.yaml
 import:
-  - path: ../../android-components/components/browser/engine-gecko/geckoview.fml.yaml
-    channel: release
-    features:
-      pdfjs:
-        - channel: developer
-          value: {
-          download-button: true,
-          open-in-app-button: true
-        }
+#  - path: ../../android-components/components/browser/engine-gecko/geckoview.fml.yaml
+#    channel: release
+#    features:
+#      pdfjs:
+#        - channel: developer
+#          value: {
+#          download-button: true,
+#          open-in-app-button: true
+#        }
   - path: ../../android-components/components/feature/fxsuggest/fxsuggest.fml.yaml
     channel: release
     features:
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/FenixApplication.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/FenixApplication.kt
index 5340aa5258..f2f3d0973e 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/FenixApplication.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/FenixApplication.kt
@@ -88,7 +88,7 @@ import org.mozilla.fenix.components.appstate.AppAction
 import org.mozilla.fenix.components.initializeGlean
 import org.mozilla.fenix.components.metrics.MozillaProductDetector
 import org.mozilla.fenix.components.startMetricsIfEnabled
-import org.mozilla.fenix.experiments.maybeFetchExperiments
+// import org.mozilla.fenix.experiments.maybeFetchExperiments
 import org.mozilla.fenix.ext.components
 import org.mozilla.fenix.ext.containsQueryParameters
 import org.mozilla.fenix.ext.isCustomEngine
@@ -419,13 +419,13 @@ open class FenixApplication : LocaleAwareApplication(), Provider {
 
         @OptIn(DelicateCoroutinesApi::class) // GlobalScope usage
         fun queueNimbusFetchInForeground() {
-            queue.runIfReadyOrQueue {
+/*            queue.runIfReadyOrQueue {
                 GlobalScope.launch(IO) {
                     components.nimbus.sdk.maybeFetchExperiments(
                         context = this@FenixApplication,
                     )
                 }
-            }
+            }*/
         }
 
         @OptIn(DelicateCoroutinesApi::class) // GlobalScope usage
@@ -506,9 +506,9 @@ open class FenixApplication : LocaleAwareApplication(), Provider {
         beginSetupMegazord()
 
         // This lazily constructs the Nimbus object…
-        val nimbus = components.nimbus.sdk
+        // val nimbus = components.nimbus.sdk
         // … which we then can populate the feature configuration.
-        FxNimbus.initialize { nimbus }
+        // FxNimbus.initialize { nimbus }
     }
 
     /**
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/advanced/DefaultLocaleSettingsController.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/advanced/DefaultLocaleSettingsController.kt
index e387bc4ae0..c8482a0f6b 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/advanced/DefaultLocaleSettingsController.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/advanced/DefaultLocaleSettingsController.kt
@@ -11,7 +11,7 @@ import mozilla.components.browser.state.action.SearchAction
 import mozilla.components.browser.state.store.BrowserStore
 import mozilla.components.support.locale.LocaleManager
 import mozilla.components.support.locale.LocaleUseCases
-import org.mozilla.fenix.nimbus.FxNimbus
+// import org.mozilla.fenix.nimbus.FxNimbus
 import java.util.Locale
 
 interface LocaleSettingsController {
@@ -39,7 +39,7 @@ class DefaultLocaleSettingsController(
         LocaleManager.updateBaseConfiguration(activity, locale)
 
         // Invalidate cached values to use the new locale
-        FxNimbus.features.nimbusValidation.withCachedValue(null)
+//        FxNimbus.features.nimbusValidation.withCachedValue(null)
         activity.recreate()
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.UPSIDE_DOWN_CAKE) {
             activity.overrideActivityTransition(Activity.OVERRIDE_TRANSITION_OPEN, 0, 0)
@@ -59,7 +59,7 @@ class DefaultLocaleSettingsController(
         LocaleManager.updateBaseConfiguration(activity, localeSettingsStore.state.localeList[0])
 
         // Invalidate cached values to use the default locale
-        FxNimbus.features.nimbusValidation.withCachedValue(null)
+//        FxNimbus.features.nimbusValidation.withCachedValue(null)
         activity.recreate()
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.UPSIDE_DOWN_CAKE) {
             activity.overrideActivityTransition(Activity.OVERRIDE_TRANSITION_OPEN, 0, 0)
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SecretSettingsFragment.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SecretSettingsFragment.kt
index b2b40dd764..cfb4a444e9 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SecretSettingsFragment.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SecretSettingsFragment.kt
@@ -57,7 +57,7 @@ class SecretSettingsFragment : PreferenceFragmentCompat() {
         }
 
         requirePreference<SwitchPreference>(R.string.pref_key_nimbus_use_preview).apply {
-            isVisible = true
+            isVisible = false
             isChecked = context.settings().nimbusUsePreview
             onPreferenceChangeListener = SharedPreferenceUpdater()
         }
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SettingsFragment.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SettingsFragment.kt
index 03d80ed014..93ec356360 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SettingsFragment.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SettingsFragment.kt
@@ -211,10 +211,10 @@ class SettingsFragment : PreferenceFragmentCompat() {
         super.onResume()
 
         // Use nimbus to set the title, and a trivial addition
-        val nimbusValidation = FxNimbus.features.nimbusValidation.value()
+//        val nimbusValidation = FxNimbus.features.nimbusValidation.value()
 
-        val title = nimbusValidation.settingsTitle
-        val suffix = nimbusValidation.settingsPunctuation
+        val title = getString(R.string.settings_title)
+        val suffix = ""
 
         showToolbar("$title$suffix")
 
@@ -561,7 +561,7 @@ class SettingsFragment : PreferenceFragmentCompat() {
         with(settings) {
             findPreference<Preference>(
                 getPreferenceKey(R.string.pref_key_nimbus_experiments),
-            )?.isVisible = showSecretDebugMenuThisSession
+            )?.isVisible = false
             findPreference<Preference>(
                 getPreferenceKey(R.string.pref_key_debug_settings),
             )?.isVisible = showSecretDebugMenuThisSession
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
index a46a154665..32aa63f5aa 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
@@ -404,7 +404,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
 
     var nimbusExperimentsFetched by booleanPreference(
         appContext.getPreferenceKey(R.string.pref_key_nimbus_experiments_fetched),
-        default = false,
+        default = true,
     )
 
     var utmParamsKnown by booleanPreference(
