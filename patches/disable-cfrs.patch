diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
index 7f19ba4304..624d9a9a77 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
@@ -197,8 +197,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
         default = 0L,
     )
 
-    val canShowCfr: Boolean
-        get() = (System.currentTimeMillis() - lastCfrShownTimeInMillis) > THREE_DAYS_MS
+    val canShowCfr: Boolean = false
 
     var forceEnableZoom by booleanPreference(
         appContext.getPreferenceKey(R.string.pref_key_accessibility_force_enable_zoom),
@@ -893,30 +892,16 @@ class Settings(private val appContext: Context) : PreferencesHolder {
     /**
      * Indicates if the total cookie protection CRF should be shown.
      */
-    var shouldShowEraseActionCFR by lazyFeatureFlagPreference(
-        appContext.getPreferenceKey(R.string.pref_key_should_show_erase_action_popup),
-        featureFlag = true,
-        default = { feltPrivateBrowsingEnabled },
-    )
+    var shouldShowEraseActionCFR = false
 
     /**
      * Indicates if the cookie banners CRF should be shown.
      */
-    var shouldShowCookieBannersCFR by lazyFeatureFlagPreference(
-        appContext.getPreferenceKey(R.string.pref_key_should_show_cookie_banners_action_popup),
-        featureFlag = true,
-        default = { shouldShowCookieBannerUI },
-    )
+    var shouldShowCookieBannersCFR = false
 
-    var shouldShowTabSwipeCFR by booleanPreference(
-        appContext.getPreferenceKey(R.string.pref_key_toolbar_tab_swipe_cfr),
-        default = false,
-    )
+    var shouldShowTabSwipeCFR = false
 
-    var hasShownTabSwipeCFR by booleanPreference(
-        appContext.getPreferenceKey(R.string.pref_key_toolbar_has_shown_tab_swipe_cfr),
-        default = false,
-    )
+    var hasShownTabSwipeCFR = true
 
     val blockCookiesSelectionInCustomTrackingProtection by stringPreference(
         key = appContext.getPreferenceKey(R.string.pref_key_tracking_protection_custom_cookies_select),
@@ -1194,23 +1179,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
     private val userNeedsToVisitInstallableSites: Boolean
         get() = pwaInstallableVisitCount.underMaxCount()
 
-    val shouldShowPwaCfr: Boolean
-        get() {
-            if (!canShowCfr) return false
-            // We only want to show this on the 3rd time a user visits a site
-            if (userNeedsToVisitInstallableSites) return false
-
-            // ShortcutManager::pinnedShortcuts is only available on Oreo+
-            if (!userKnowsAboutPwas && Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
-                val manager = appContext.getSystemService(ShortcutManager::class.java)
-                val alreadyHavePwaInstalled = manager != null && manager.pinnedShortcuts.size > 0
-
-                // Users know about PWAs onboarding if they already have PWAs installed.
-                userKnowsAboutPwas = alreadyHavePwaInstalled
-            }
-            // Show dialog only if user does not know abut PWAs
-            return !userKnowsAboutPwas
-        }
+    val shouldShowPwaCfr: Boolean = false
 
     var userKnowsAboutPwas by booleanPreference(
         appContext.getPreferenceKey(R.string.pref_key_user_knows_about_pwa),
@@ -1222,8 +1191,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
         default = true,
     )
 
-    val shouldShowOpenInAppCfr: Boolean
-        get() = canShowCfr && shouldShowOpenInAppBanner
+    val shouldShowOpenInAppCfr: Boolean = false
 
     var shouldShowAutoCloseTabsBanner by booleanPreference(
         appContext.getPreferenceKey(R.string.pref_key_should_show_auto_close_tabs_banner),
@@ -1665,11 +1633,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
     /**
      * Indicates if sync onboarding CFR should be shown.
      */
-    var showSyncCFR by lazyFeatureFlagPreference(
-        appContext.getPreferenceKey(R.string.pref_key_should_show_sync_cfr),
-        featureFlag = true,
-        default = { mr2022Sections[Mr2022Section.SYNC_CFR] == true },
-    )
+    var showSyncCFR = false
 
     /**
      * Indicates if home onboarding dialog should be shown.
@@ -1883,10 +1847,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
     /**
      * Indicates if the search bar CFR should be displayed to the user.
      */
-    var shouldShowSearchBarCFR by booleanPreference(
-        key = appContext.getPreferenceKey(R.string.pref_key_should_searchbar_cfr),
-        default = false,
-    )
+    var shouldShowSearchBarCFR = false
 
     /**
      * Indicates whether or not to use remote server search configuration.
@@ -1900,10 +1861,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
     /**
      * Indicates if the menu CFR should be displayed to the user.
      */
-    var shouldShowMenuCFR by booleanPreference(
-        key = appContext.getPreferenceKey(R.string.pref_key_menu_cfr),
-        default = true,
-    )
+    var shouldShowMenuCFR = false
 
     /**
      * Get the current mode for how https-only is enabled.
