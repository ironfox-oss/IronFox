diff --git a/mobile/android/fenix/app/build.gradle b/mobile/android/fenix/app/build.gradle
index d9a6045423..c226b7dff2 100644
--- a/mobile/android/fenix/app/build.gradle
+++ b/mobile/android/fenix/app/build.gradle
@@ -80,8 +80,8 @@ android {
         buildConfigField "String", "VCS_HASH", "\"\""
         // This should be the "public" base URL of AMO.
         buildConfigField "String", "AMO_BASE_URL", "\"https://addons.mozilla.org\""
-        buildConfigField "String", "AMO_COLLECTION_NAME", "\"Extensions-for-Android\""
-        buildConfigField "String", "AMO_COLLECTION_USER", "\"mozilla\""
+        buildConfigField "String", "AMO_COLLECTION_NAME", "\"IronFox\""
+        buildConfigField "String", "AMO_COLLECTION_USER", "\"18588170\""
         // This should be the base URL used to call the AMO API.
         buildConfigField "String", "AMO_SERVER_URL", "\"https://services.addons.mozilla.org\""
 
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SupportUtils.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SupportUtils.kt
index c13ecb6c86..75b9f05e51 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SupportUtils.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SupportUtils.kt
@@ -21,14 +21,14 @@ import java.net.URLEncoder
 import java.util.Locale
 
 object SupportUtils {
-    const val RATE_APP_URL = "market://details?id=" + BuildConfig.APPLICATION_ID
-    const val POCKET_TRENDING_URL = "https://getpocket.com/fenix-top-articles"
-    const val WIKIPEDIA_URL = "https://www.wikipedia.org/"
-    const val FENIX_PLAY_STORE_URL = "https://play.google.com/store/apps/details?id=${BuildConfig.APPLICATION_ID}"
-    const val GOOGLE_URL = "https://www.google.com/"
-    const val GOOGLE_US_URL = "https://www.google.com/webhp?client=firefox-b-1-m&channel=ts"
-    const val GOOGLE_XX_URL = "https://www.google.com/webhp?client=firefox-b-m&channel=ts"
-    const val WHATS_NEW_URL = "https://www.mozilla.org/firefox/android/notes"
+    const val RATE_APP_URL = ""
+    const val POCKET_TRENDING_URL = ""
+    const val WIKIPEDIA_URL = ""
+    const val FENIX_PLAY_STORE_URL = ""
+    const val GOOGLE_URL = ""
+    const val GOOGLE_US_URL = ""
+    const val GOOGLE_XX_URL = ""
+    const val WHATS_NEW_URL = "https://gitlab.com/ironfox-oss/IronFox/-/releases"
     const val FXACCOUNT_SUMO_URL = "https://support.mozilla.org/kb/access-mozilla-services-firefox-account"
 
     // This is locale-less on purpose so that the content negotiation happens on the AMO side because the current
@@ -38,34 +38,34 @@ object SupportUtils {
 
     enum class SumoTopic(internal val topicStr: String) {
         HELP("faq-android"),
-        PRIVATE_BROWSING_MYTHS("common-myths-about-private-browsing"),
-        YOUR_RIGHTS("your-rights"),
-        TRACKING_PROTECTION("tracking-protection-firefox-android"),
-        TOTAL_COOKIE_PROTECTION("enhanced-tracking-protection-android"),
-        OPT_OUT_STUDIES("how-opt-out-studies-firefox-android"),
-        SEND_TABS("send-tab-preview"),
-        SET_AS_DEFAULT_BROWSER("make-firefox-default-browser-android"),
-        SEARCH_SUGGESTION("how-search-firefox-preview"),
-        CUSTOM_SEARCH_ENGINES("custom-search-engines"),
-        SYNC_SETUP("how-set-firefox-sync-firefox-android"),
-        QR_CAMERA_ACCESS("qr-camera-access"),
-        SMARTBLOCK("smartblock-enhanced-tracking-protection"),
-        SPONSOR_PRIVACY("sponsor-privacy"),
-        HTTPS_ONLY_MODE("https-only-mode-firefox-android"),
-        DNS_OVER_HTTPS("https-only-mode-firefox-android"), // FIXME
-        DNS_OVER_HTTPS_LOCAL_PROVIDER("https-only-mode-firefox-android"), // FIXME
-        DNS_OVER_HTTPS_NETWORK("https-only-mode-firefox-android"), // FIXME
-        UNSIGNED_ADDONS("unsigned-addons"),
-        REVIEW_QUALITY_CHECK("review_checker_mobile"),
-        FX_SUGGEST("search-suggestions-firefox"),
-        TRANSLATIONS("android-translation"),
-        MANAGE_OPTIONAL_EXTENSION_PERMISSIONS("manage-optional-permissions-android-extensions"),
-        EXTENSION_PERMISSIONS("extension-permissions"),
-        FIND_INSTALL_ADDONS("add-ons-firefox-android"),
-        CRASH_REPORTS("mobile-crash-reports"),
-        TECHNICAL_AND_INTERACTION_DATA("mobile-technical-and-interaction-data"),
-        USAGE_PING_SETTINGS("usage-ping-settings-mobile"),
-        MARKETING_DATA("mobile-marketing-data"),
+        PRIVATE_BROWSING_MYTHS("kb/common-myths-about-private-browsing"),
+        YOUR_RIGHTS(""),
+        TRACKING_PROTECTION("kb/tracking-protection-firefox-android"),
+        TOTAL_COOKIE_PROTECTION("kb/enhanced-tracking-protection-android"),
+        OPT_OUT_STUDIES(""),
+        SEND_TABS("kb/send-tab-preview"),
+        SET_AS_DEFAULT_BROWSER("kb/make-firefox-default-browser-android"),
+        SEARCH_SUGGESTION("kb/how-search-firefox-preview"),
+        CUSTOM_SEARCH_ENGINES("kb/custom-search-engines"),
+        SYNC_SETUP("kb/how-set-firefox-sync-firefox-android"),
+        QR_CAMERA_ACCESS("kb/qr-camera-access"),
+        SMARTBLOCK("kb/smartblock-enhanced-tracking-protection"),
+        SPONSOR_PRIVACY(""),
+        HTTPS_ONLY_MODE("kb/https-only-mode-firefox-android"),
+        DNS_OVER_HTTPS("kb/https-only-mode-firefox-android"), // FIXME
+        DNS_OVER_HTTPS_LOCAL_PROVIDER("kb/https-only-mode-firefox-android"), // FIXME
+        DNS_OVER_HTTPS_NETWORK("kb/https-only-mode-firefox-android"), // FIXME
+        UNSIGNED_ADDONS("kb/unsigned-addons"),
+        REVIEW_QUALITY_CHECK(""),
+        FX_SUGGEST(""),
+        TRANSLATIONS("kb/android-translation"),
+        MANAGE_OPTIONAL_EXTENSION_PERMISSIONS("kb/manage-optional-permissions-android-extensions"),
+        EXTENSION_PERMISSIONS("kb/extension-permissions"),
+        FIND_INSTALL_ADDONS("kb/add-ons-firefox-android"),
+        CRASH_REPORTS(""),
+        TECHNICAL_AND_INTERACTION_DATA(""),
+        USAGE_PING_SETTINGS(""),
+        MARKETING_DATA(""),
     }
 
     enum class MozillaPage(internal val path: String) {
@@ -87,7 +87,7 @@ object SupportUtils {
         val appVersion = context.appVersionName.replace(" ", "")
         val osTarget = "Android"
         val langTag = getLanguageTag(locale)
-        return "https://support.mozilla.org/1/mobile/$appVersion/$osTarget/$langTag/$escapedTopic"
+        return "https://support.mozilla.org/$langTag/$escapedTopic"
     }
 
     /**
@@ -97,13 +97,13 @@ object SupportUtils {
     fun getGenericSumoURLForTopic(topic: SumoTopic, locale: Locale = Locale.getDefault()): String {
         val escapedTopic = getEncodedTopicUTF8(topic.topicStr)
         val langTag = getLanguageTag(locale)
-        return "https://support.mozilla.org/$langTag/kb/$escapedTopic"
+        return "https://support.mozilla.org/kb/$escapedTopic"
     }
 
     fun getMozillaPageUrl(page: MozillaPage, locale: Locale = Locale.getDefault()): String {
         val path = page.path
         val langTag = getLanguageTag(locale)
-        return "https://www.mozilla.org/$langTag/$path"
+        return "https://www.mozilla.org/$path"
     }
 
     fun createCustomTabIntent(context: Context, url: String): Intent = CustomTabsIntent.Builder()
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/onboarding/OnboardingFragment.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/onboarding/OnboardingFragment.kt
index e5ab956ac3..8f88bf456e 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/onboarding/OnboardingFragment.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/onboarding/OnboardingFragment.kt
@@ -82,7 +82,7 @@ class OnboardingFragment : Fragment() {
             pagesToDisplay(
                 showDefaultBrowserPage = isNotDefaultBrowser(this) && !isDefaultBrowserPromptSupported(),
                 showNotificationPage = canShowNotificationPage(),
-                showAddWidgetPage = canShowAddSearchWidgetPrompt(AppWidgetManager.getInstance(activity)),
+                showAddWidgetPage = false,
             ).toMutableList()
         }
     }
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/onboarding/view/OnboardingMapper.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/onboarding/view/OnboardingMapper.kt
index 795fcd7b7e..5c0cb8796e 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/onboarding/view/OnboardingMapper.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/onboarding/view/OnboardingMapper.kt
@@ -32,7 +32,7 @@ internal fun Collection<OnboardingCardData>.toPageUiData(
         .sortedBy { it.ordering }
         .mapIndexed { index, onboardingCardData ->
             // only first onboarding card shows privacy caption
-            onboardingCardData.toPageUiData(if (index == 0) privacyCaption else null)
+            onboardingCardData.toPageUiData(null)
         }
 }
 
@@ -112,7 +112,6 @@ private fun OnboardingCardData.toPageUiData(privacyCaption: Caption?) = Onboardi
     themeOptions = extraData?.customizationThemeData
         ?.takeIf { it.isNotEmpty() }
         ?.toOnboardingThemeOptions(),
-    termsOfService = extraData?.termOfServiceData?.toOnboardingTermsOfService(),
     marketingData = extraData?.marketingData?.toOnboardingMarketingData(),
 )
 
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/onboarding/view/TermsOfServiceOnboardingPage.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/onboarding/view/TermsOfServiceOnboardingPage.kt
index 10488889d7..02572c03a1 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/onboarding/view/TermsOfServiceOnboardingPage.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/onboarding/view/TermsOfServiceOnboardingPage.kt
@@ -135,22 +135,22 @@ private fun BodyText(
             modifier = Modifier.padding(horizontal = 10.dp),
         ) {
             val lineOneState = LinkTextState(
-                text = it.lineOneLinkText,
-                url = it.lineOneLinkUrl,
-                onClick = eventHandler::onTermsOfServiceLinkClicked,
+                text = "",
+                url = "",
+                onClick = {},
             )
             val lineTwoState = LinkTextState(
-                text = it.lineTwoLinkText,
-                url = it.lineTwoLinkUrl,
-                onClick = eventHandler::onPrivacyNoticeLinkClicked,
+                text = "",
+                url = "",
+                onClick = {},
             )
             val lineThreeState = LinkTextState(
-                text = it.lineThreeLinkText,
+                text = "",
                 url = "",
-                onClick = { _ -> eventHandler.onManagePrivacyPreferencesLinkClicked() },
+                onClick = {},
             )
             LinkText(
-                text = it.lineOneText.updateFirstPlaceholder(it.lineOneLinkText),
+                text = "",
                 linkTextStates = listOf(
                     lineOneState,
                 ),
@@ -162,7 +162,7 @@ private fun BodyText(
             )
 
             LinkText(
-                text = it.lineTwoText.updateFirstPlaceholder(it.lineTwoLinkText),
+                text = "",
                 linkTextStates = listOf(
                     lineTwoState,
                 ),
@@ -174,7 +174,7 @@ private fun BodyText(
             )
 
             LinkText(
-                text = it.lineThreeText.updateFirstPlaceholder(it.lineThreeLinkText),
+                text = "",
                 linkTextStates = listOf(
                     lineThreeState,
                 ),
@@ -201,14 +201,14 @@ private fun OnboardingPagePreview() {
                 title = stringResource(id = R.string.onboarding_welcome_to_firefox),
                 description = stringResource(id = R.string.onboarding_terms_of_service_sub_header_2),
                 termsOfService = OnboardingTermsOfService(
-                    lineOneText = stringResource(id = R.string.onboarding_term_of_service_line_one_2),
-                    lineOneLinkText = stringResource(id = R.string.onboarding_term_of_service_line_one_link_text_2),
-                    lineOneLinkUrl = "URL",
-                    lineTwoText = stringResource(id = R.string.onboarding_term_of_service_line_two_2),
-                    lineTwoLinkText = stringResource(id = R.string.onboarding_term_of_service_line_two_link_text),
-                    lineTwoLinkUrl = "URL",
-                    lineThreeText = stringResource(id = R.string.onboarding_term_of_service_line_three),
-                    lineThreeLinkText = stringResource(id = R.string.onboarding_term_of_service_line_three_link_text),
+                    lineOneText = "",
+                    lineOneLinkText = "",
+                    lineOneLinkUrl = "",
+                    lineTwoText = "",
+                    lineTwoLinkText = "",
+                    lineTwoLinkUrl = "",
+                    lineThreeText = "",
+                    lineThreeLinkText = "",
                 ),
                 imageRes = R.drawable.ic_firefox,
                 primaryButton = Action(
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
index 7f19ba4304..659e5bac55 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
@@ -2430,26 +2430,17 @@ class Settings(private val appContext: Context) : PreferencesHolder {
     /**
      * Indicates if the user has completed the setup step for choosing the toolbar location
      */
-    var hasCompletedSetupStepToolbar by booleanPreference(
-        key = appContext.getPreferenceKey(R.string.pref_key_setup_step_toolbar),
-        default = false,
-    )
+    var hasCompletedSetupStepToolbar = true
 
     /**
      * Indicates if the user has completed the setup step for choosing the theme
      */
-    var hasCompletedSetupStepTheme by booleanPreference(
-        key = appContext.getPreferenceKey(R.string.pref_key_setup_step_theme),
-        default = false,
-    )
+    var hasCompletedSetupStepTheme = true
 
     /**
      * Indicates if the user has completed the setup step for exploring extensions
      */
-    var hasCompletedSetupStepExtensions by booleanPreference(
-        key = appContext.getPreferenceKey(R.string.pref_key_setup_step_extensions),
-        default = false,
-    )
+    var hasCompletedSetupStepExtensions = true
 
     /**
      * Indicates if this is the default browser.
@@ -2462,12 +2453,5 @@ class Settings(private val appContext: Context) : PreferencesHolder {
     /**
      * Indicates whether or not to show the checklist feature.
      */
-    var showSetupChecklist by lazyFeatureFlagPreference(
-        key = appContext.getPreferenceKey(R.string.pref_key_setup_checklist_complete),
-        default = {
-            FxNimbus.features.setupChecklist.value().enabled &&
-                    canShowAddSearchWidgetPrompt(AppWidgetManager.getInstance(appContext))
-        },
-        featureFlag = true,
-    )
+    var showSetupChecklist = false
 }
diff --git a/mobile/android/moz.configure b/mobile/android/moz.configure
index 0e2a6efdc9..083c9cac2d 100644
--- a/mobile/android/moz.configure
+++ b/mobile/android/moz.configure
@@ -116,7 +116,7 @@ imply_option("MOZ_SERVICES_HEALTHREPORT", True)
 imply_option("MOZ_GECKOVIEW_HISTORY", True)
 
 imply_option("MOZ_APP_UA_NAME", "Firefox")
-imply_option("MOZ_APP_VENDOR", "Mozilla")
+imply_option("MOZ_APP_VENDOR", "IronFox OSS")
 imply_option("MOZ_APP_ID", "{aa3c5121-dab2-40e2-81ca-7ea25febc110}")
 imply_option("BROWSER_CHROME_URL", "chrome://geckoview/content/geckoview.xhtml")
 
