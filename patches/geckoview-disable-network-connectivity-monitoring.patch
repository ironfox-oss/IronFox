diff --git a/mobile/android/geckoview/src/main/AndroidManifest.xml b/mobile/android/geckoview/src/main/AndroidManifest.xml
index ac6e718f3c..24199dbadd 100644
--- a/mobile/android/geckoview/src/main/AndroidManifest.xml
+++ b/mobile/android/geckoview/src/main/AndroidManifest.xml
@@ -6,7 +6,7 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools">
 
-    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
+    <!-- <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/> -->
     <uses-permission android:name="android.permission.HIGH_SAMPLING_RATE_SENSORS"
             tools:ignore="HighSamplingRate" />
     <uses-permission android:name="android.permission.INTERNET"/>
diff --git a/mobile/android/geckoview/src/main/java/org/mozilla/geckoview/GeckoRuntime.java b/mobile/android/geckoview/src/main/java/org/mozilla/geckoview/GeckoRuntime.java
index cd93c8fca3..ccb6eebdd1 100644
--- a/mobile/android/geckoview/src/main/java/org/mozilla/geckoview/GeckoRuntime.java
+++ b/mobile/android/geckoview/src/main/java/org/mozilla/geckoview/GeckoRuntime.java
@@ -214,7 +214,7 @@ public final class GeckoRuntime implements Parcelable {
       GeckoAppShell.resumeLocation();
       // Monitor network status and send change notifications to Gecko
       // while active.
-      GeckoNetworkManager.getInstance().start(GeckoAppShell.getApplicationContext());
+//      GeckoNetworkManager.getInstance().start(GeckoAppShell.getApplicationContext());
 
       // Set settings that may have changed between last app opening
       GeckoAppShell.setIs24HourFormat(
@@ -236,7 +236,7 @@ public final class GeckoRuntime implements Parcelable {
       // Pause listening for locations when in background
       GeckoAppShell.pauseLocation();
       // Stop monitoring network status while inactive.
-      GeckoNetworkManager.getInstance().stop();
+//      GeckoNetworkManager.getInstance().stop();
       GeckoThread.onPause();
       Clipboard.onPause();
     }
