diff --git a/mobile/android/android-components/components/browser/engine-gecko/src/main/java/mozilla/components/browser/engine/gecko/GeckoEngine.kt b/mobile/android/android-components/components/browser/engine-gecko/src/main/java/mozilla/components/browser/engine/gecko/GeckoEngine.kt
index 53eb28c845..ff92c2474e 100644
--- a/mobile/android/android-components/components/browser/engine-gecko/src/main/java/mozilla/components/browser/engine/gecko/GeckoEngine.kt
+++ b/mobile/android/android-components/components/browser/engine-gecko/src/main/java/mozilla/components/browser/engine/gecko/GeckoEngine.kt
@@ -1470,6 +1470,15 @@ class GeckoEngine(
         override var cookieBehaviorOptInPartitioningPBM: Boolean
             get() = runtime.settings.cookieBehaviorOptInPartitioningPBM
             set(value) { runtime.settings.setCookieBehaviorOptInPartitioningPBM(value) }
+        
+        override var spoofEnglish: Boolean
+            get() = runtime.settings.spoofEnglish
+            set(value) {
+                value.let {
+                    runtime.settings.spoofEnglish = it
+                    localeUpdater.updateValue()
+                }
+            }
 
         override var certificateTransparencyMode: Int
             get() = runtime.settings.certificateTransparencyMode
@@ -1518,6 +1527,7 @@ class GeckoEngine(
             this.parallelMarkingEnabled = it.parallelMarkingEnabled
             this.cookieBehaviorOptInPartitioning = it.cookieBehaviorOptInPartitioning
             this.cookieBehaviorOptInPartitioningPBM = it.cookieBehaviorOptInPartitioningPBM
+            this.spoofEnglish = it.spoofEnglish
             this.certificateTransparencyMode = it.certificateTransparencyMode
             this.postQuantumKeyExchangeEnabled = it.postQuantumKeyExchangeEnabled
         }
diff --git a/mobile/android/android-components/components/concept/engine/src/main/java/mozilla/components/concept/engine/Settings.kt b/mobile/android/android-components/components/concept/engine/src/main/java/mozilla/components/concept/engine/Settings.kt
index db66cbe503..cb8ad3ca35 100644
--- a/mobile/android/android-components/components/concept/engine/src/main/java/mozilla/components/concept/engine/Settings.kt
+++ b/mobile/android/android-components/components/concept/engine/src/main/java/mozilla/components/concept/engine/Settings.kt
@@ -330,6 +330,8 @@ abstract class Settings {
      */
     open var cookieBehaviorOptInPartitioningPBM: Boolean by UnsupportedSetting()
 
+    open var spoofEnglish: Boolean by UnsupportedSetting()
+
     /**
      * Setting to control how Certificate Transparency information is processed.
      */
@@ -406,6 +408,7 @@ data class DefaultSettings(
     val getDesktopMode: () -> Boolean = { false },
     override var cookieBehaviorOptInPartitioning: Boolean = false,
     override var cookieBehaviorOptInPartitioningPBM: Boolean = false,
+    override var spoofEnglish: Boolean = false,
     override var certificateTransparencyMode: Int = 0,
     override var postQuantumKeyExchangeEnabled: Boolean = false,
 ) : Settings() {
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/Core.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/Core.kt
index e57302c306..ebb3f8c567 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/Core.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/Core.kt
@@ -188,6 +188,7 @@ class Core(
             webContentIsolationStrategy = WebContentIsolationStrategy.ISOLATE_HIGH_VALUE,
             fetchPriorityEnabled = FxNimbus.features.networking.value().fetchPriorityEnabled,
             parallelMarkingEnabled = FxNimbus.features.javascript.value().parallelMarkingEnabled,
+            spoofEnglish = context.settings().spoofEnglish,
             certificateTransparencyMode = FxNimbus.features.pki.value().certificateTransparencyMode,
             postQuantumKeyExchangeEnabled = FxNimbus.features.pqcrypto.value().postQuantumKeyExchangeEnabled,
         )
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/advanced/DefaultLocaleSettingsController.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/advanced/DefaultLocaleSettingsController.kt
index e387bc4ae0..404c55872a 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/advanced/DefaultLocaleSettingsController.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/advanced/DefaultLocaleSettingsController.kt
@@ -12,6 +12,7 @@ import mozilla.components.browser.state.store.BrowserStore
 import mozilla.components.support.locale.LocaleManager
 import mozilla.components.support.locale.LocaleUseCases
 import org.mozilla.fenix.nimbus.FxNimbus
+import org.mozilla.fenix.ext.components
 import java.util.Locale
 
 interface LocaleSettingsController {
@@ -83,5 +84,9 @@ class DefaultLocaleSettingsController(
         config.setLocale(locale)
         config.setLayoutDirection(locale)
         resources.updateConfiguration(config, resources.displayMetrics)
+        // A slightly hacky way of triggering a `runtime.settings.locales` update,
+        // so that the locales are updated in GeckoView.
+        val spoofEnglish = context.components.core.engine.settings.spoofEnglish
+        context.components.core.engine.settings.spoofEnglish = spoofEnglish
     }
 }
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/advanced/LocaleSettingsFragment.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/advanced/LocaleSettingsFragment.kt
index 91929aab38..a45b807f84 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/advanced/LocaleSettingsFragment.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/advanced/LocaleSettingsFragment.kt
@@ -23,6 +23,8 @@ import org.mozilla.fenix.R
 import org.mozilla.fenix.components.StoreProvider
 import org.mozilla.fenix.databinding.FragmentLocaleSettingsBinding
 import org.mozilla.fenix.ext.components
+import org.mozilla.fenix.ext.requireComponents
+import org.mozilla.fenix.ext.settings
 import org.mozilla.fenix.ext.showToolbar
 
 class LocaleSettingsFragment : Fragment(), MenuProvider {
@@ -46,6 +48,8 @@ class LocaleSettingsFragment : Fragment(), MenuProvider {
         _binding = FragmentLocaleSettingsBinding.inflate(inflater, container, false)
         val view = binding.root
 
+        bindEnableSwitch()
+
         val browserStore = requireContext().components.core.store
         val localeUseCase = LocaleUseCases(browserStore)
 
@@ -62,10 +66,19 @@ class LocaleSettingsFragment : Fragment(), MenuProvider {
                 localeUseCase = localeUseCase,
             ),
         )
-        localeView = LocaleSettingsView(binding.root, interactor)
+        localeView = LocaleSettingsView(binding.localeContainer, interactor)
         return view
     }
 
+    private fun bindEnableSwitch() {
+        val switch = binding.enableSwitch
+        switch.isChecked = requireComponents.core.engine.settings.spoofEnglish
+        switch.setOnCheckedChangeListener { _, isChecked ->
+            context?.settings()?.spoofEnglish = isChecked
+            requireComponents.core.engine.settings.spoofEnglish = isChecked
+        }
+    }
+
     override fun onCreateMenu(menu: Menu, inflater: MenuInflater) {
         inflater.inflate(R.menu.languages_list, menu)
         val searchItem = menu.findItem(R.id.search)
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
index 72493a2c21..682a11ab78 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
@@ -360,6 +360,11 @@ class Settings(private val appContext: Context) : PreferencesHolder {
         false,
     )
 
+    var spoofEnglish by booleanPreference(
+        appContext.getPreferenceKey(R.string.pref_key_spoof_english),
+        default = false
+    )
+
     var defaultSearchEngineName by stringPreference(
         appContext.getPreferenceKey(R.string.pref_key_search_engine),
         default = "",
diff --git a/mobile/android/fenix/app/src/main/res/layout/fragment_locale_settings.xml b/mobile/android/fenix/app/src/main/res/layout/fragment_locale_settings.xml
index d235e7043f..d0b3a29e9d 100644
--- a/mobile/android/fenix/app/src/main/res/layout/fragment_locale_settings.xml
+++ b/mobile/android/fenix/app/src/main/res/layout/fragment_locale_settings.xml
@@ -7,13 +7,31 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
-    <FrameLayout
+    <com.google.android.material.switchmaterial.SwitchMaterial
+        android:id="@+id/enable_switch"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center_vertical|end"
+        android:background="?android:attr/selectableItemBackground"
+        android:checked="true"
+        android:clickable="true"
+        android:focusable="true"
+        android:layout_marginStart="54dp"
+        android:padding="16dp"
+        android:text="@string/tor_spoof_english"
+        android:textColor="?textPrimary"
+        android:textSize="16sp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"  />
+    <androidx.constraintlayout.widget.ConstraintLayout
+
         android:id="@+id/locale_container"
         android:layout_width="match_parent"
-        android:layout_height="match_parent"
+        android:layout_height="0dp"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent" />
+        app:layout_constraintTop_toBottomOf="@id/enable_switch" />
 
 </androidx.constraintlayout.widget.ConstraintLayout>
diff --git a/mobile/android/fenix/app/src/main/res/values/preference_keys.xml b/mobile/android/fenix/app/src/main/res/values/preference_keys.xml
index 4faefc7999..d6db4c5cc9 100644
--- a/mobile/android/fenix/app/src/main/res/values/preference_keys.xml
+++ b/mobile/android/fenix/app/src/main/res/values/preference_keys.xml
@@ -460,6 +460,8 @@
     <!-- DNS over HTTPS Secret settings -->
     <string name="pref_key_doh_settings_enabled" translatable="false">pref_key_doh_settings_enabled</string>
 
+    <string name="pref_key_spoof_english" translatable="false">pref_key_spoof_english</string>
+
     <!-- Glean usage profile id -->
     <string name="pref_key_glean_usage_profile_id" translatable="false">pref_key_glean_usage_profile_id</string>
 
diff --git a/mobile/android/geckoview/api.txt b/mobile/android/geckoview/api.txt
index 0b143db38a..18b7552b1f 100644
--- a/mobile/android/geckoview/api.txt
+++ b/mobile/android/geckoview/api.txt
@@ -918,6 +918,7 @@ package org.mozilla.geckoview {
     method public boolean getRemoteDebuggingEnabled();
     method @Nullable public GeckoRuntime getRuntime();
     method @Nullable public Rect getScreenSizeOverride();
+    method public boolean getSpoofEnglish();
     method public boolean getTranslationsOfferPopup();
     method @NonNull public List<String> getTrustedRecursiveResolverExcludedDomains();
     method @NonNull public String getTrustedRecursiveResolverUri();
@@ -961,6 +962,7 @@ package org.mozilla.geckoview {
     method @NonNull public GeckoRuntimeSettings setPostQuantumKeyExchangeEnabled(boolean);
     method @NonNull public GeckoRuntimeSettings setPreferredColorScheme(int);
     method @NonNull public GeckoRuntimeSettings setRemoteDebuggingEnabled(boolean);
+    method @NonNull public GeckoRuntimeSettings setSpoofEnglish(boolean);
     method @NonNull public GeckoRuntimeSettings setTranslationsOfferPopup(boolean);
     method @NonNull public GeckoRuntimeSettings setTrustedRecursiveResolverExcludedDomains(@NonNull List<String>);
     method @NonNull public GeckoRuntimeSettings setTrustedRecursiveResolverMode(int);
@@ -1024,6 +1026,7 @@ package org.mozilla.geckoview {
     method @NonNull public GeckoRuntimeSettings.Builder preferredColorScheme(int);
     method @NonNull public GeckoRuntimeSettings.Builder remoteDebuggingEnabled(boolean);
     method @NonNull public GeckoRuntimeSettings.Builder screenSizeOverride(int, int);
+    method @NonNull public GeckoRuntimeSettings.Builder spoofEnglish(boolean);
     method @NonNull public GeckoRuntimeSettings.Builder translationsOfferPopup(boolean);
     method @NonNull public GeckoRuntimeSettings.Builder trustedRecursiveResolverMode(int);
     method @NonNull public GeckoRuntimeSettings.Builder trustedRecursiveResolverUri(@NonNull String);
diff --git a/mobile/android/geckoview/src/main/java/org/mozilla/geckoview/GeckoRuntimeSettings.java b/mobile/android/geckoview/src/main/java/org/mozilla/geckoview/GeckoRuntimeSettings.java
index 571549c44a..5a9c3f76de 100644
--- a/mobile/android/geckoview/src/main/java/org/mozilla/geckoview/GeckoRuntimeSettings.java
+++ b/mobile/android/geckoview/src/main/java/org/mozilla/geckoview/GeckoRuntimeSettings.java
@@ -602,6 +602,17 @@ public final class GeckoRuntimeSettings extends RuntimeSettings {
       return this;
     }
 
+    /**
+     * Sets whether we should spoof locale to English for webpages.
+     *
+     * @param flag True if we should spoof locale to English for webpages, false otherwise.
+     * @return This Builder instance.
+     */
+    public @NonNull Builder spoofEnglish(final boolean flag) {
+      getSettings().mSpoofEnglish.set(flag ? 2 : 1);
+      return this;
+    }
+
     /**
      * Set this flag to disable low-memory detection. Set this when running tests to avoid
      * unpredictable behavior at runtime.
@@ -712,6 +723,7 @@ public final class GeckoRuntimeSettings extends RuntimeSettings {
       new Pref<Boolean>("network.cookie.cookieBehavior.optInPartitioning.pbmode", false);
   /* package */ final Pref<Integer> mCertificateTransparencyMode =
       new Pref<Integer>("security.pki.certificate_transparency.mode", 0);
+  /* package */ final Pref<Integer> mSpoofEnglish = new Pref<>("privacy.spoof_english", 0);
   /* package */ final Pref<Boolean> mPostQuantumKeyExchangeTLSEnabled =
       new Pref<Boolean>("security.tls.enable_kyber", false);
   /* package */ final Pref<Boolean> mPostQuantumKeyExchangeHttp3Enabled =
@@ -2071,6 +2083,26 @@ public final class GeckoRuntimeSettings extends RuntimeSettings {
     return this;
   }
 
+  /**
+   * Get whether we should spoof locale to English for webpages.
+   *
+   * @return Whether we should spoof locale to English for webpages.
+   */
+  public boolean getSpoofEnglish() {
+    return mSpoofEnglish.get() == 2;
+  }
+
+  /**
+   * Set whether we should spoof locale to English for webpages.
+   *
+   * @param flag A flag determining whether we should locale to English for webpages.
+   * @return This GeckoRuntimeSettings instance.
+   */
+  public @NonNull GeckoRuntimeSettings setSpoofEnglish(final boolean flag) {
+    mSpoofEnglish.commit(flag ? 2 : 1);
+    return this;
+  }
+
   @Override // Parcelable
   public void writeToParcel(final Parcel out, final int flags) {
     super.writeToParcel(out, flags);
diff --git a/mobile/shared/components/geckoview/GeckoViewStartup.sys.mjs b/mobile/shared/components/geckoview/GeckoViewStartup.sys.mjs
index d3fb71c91b..98b3b70f45 100644
--- a/mobile/shared/components/geckoview/GeckoViewStartup.sys.mjs
+++ b/mobile/shared/components/geckoview/GeckoViewStartup.sys.mjs
@@ -12,6 +12,7 @@ ChromeUtils.defineESModuleGetters(lazy, {
   DoHController: "resource://gre/modules/DoHController.sys.mjs",
   EventDispatcher: "resource://gre/modules/Messaging.sys.mjs",
   PdfJs: "resource://pdf.js/PdfJs.sys.mjs",
+  RFPHelper: "resource://gre/modules/RFPHelper.sys.mjs",
 });
 
 const { debug, warn } = GeckoViewUtils.initLogging("Startup");
@@ -342,6 +343,10 @@ export class GeckoViewStartup {
         if (aData.requestedLocales) {
           Services.locale.requestedLocales = aData.requestedLocales;
         }
+        lazy.RFPHelper._handleSpoofEnglishChanged();
+        if (Services.prefs.getIntPref("privacy.spoof_english", 0) === 2) {
+          break;
+        }
         const pls = Cc["@mozilla.org/pref-localizedstring;1"].createInstance(
           Ci.nsIPrefLocalizedString
         );
