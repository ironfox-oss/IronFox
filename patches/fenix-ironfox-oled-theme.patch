diff --git a/mobile/android/android-components/components/compose/base/src/main/java/mozilla/components/compose/base/theme/AcornColors.kt b/mobile/android/android-components/components/compose/base/src/main/java/mozilla/components/compose/base/theme/AcornColors.kt
index a4fac39ab6..8ebe6af658 100644
--- a/mobile/android/android-components/components/compose/base/src/main/java/mozilla/components/compose/base/theme/AcornColors.kt
+++ b/mobile/android/android-components/components/compose/base/src/main/java/mozilla/components/compose/base/theme/AcornColors.kt
@@ -807,6 +807,17 @@ val darkColorPalette = AcornColors(
     surfaceDimVariant = PhotonColors.DarkGrey80,
 )
 
+val oledColorPalette = darkColorPalette.copy(
+    layer1 = PhotonColors.Black,
+    layer2 = PhotonColors.DarkGrey90,
+    layer3 = PhotonColors.DarkGrey80,
+    layer4Start = PhotonColors.Black,
+    layer4Center = PhotonColors.Black,
+    layer4End = PhotonColors.Black,
+    actionTertiary = PhotonColors.DarkGrey80,
+    borderPrimary = PhotonColors.DarkGrey70,
+)
+
 val lightColorPalette = AcornColors(
     layer1 = PhotonColors.LightGrey10,
     layer2 = PhotonColors.White,
@@ -988,6 +999,8 @@ fun acornDarkColorScheme(): ColorScheme = darkColorPalette.toM3ColorScheme(
     surfaceContainerLowest = PhotonColors.DarkGrey80,
 )
 
+fun acornOledColorScheme(): ColorScheme = acornDarkColorScheme().copy()
+
 /**
  * Returns a light Material color scheme mapped from Acorn.
  */
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/FenixApplication.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/FenixApplication.kt
index a88ff8d3ac..b52774ae05 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/FenixApplication.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/FenixApplication.kt
@@ -599,7 +599,7 @@ open class FenixApplication : LocaleAwareApplication(), Provider {
                     AppCompatDelegate.MODE_NIGHT_NO,
                 )
             }
-            settings.shouldUseDarkTheme -> {
+            settings.shouldUseDarkTheme || settings.shouldUseOledTheme -> {
                 AppCompatDelegate.setDefaultNightMode(
                     AppCompatDelegate.MODE_NIGHT_YES,
                 )
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/Core.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/Core.kt
index 6875486c72..7770649558 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/Core.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/components/Core.kt
@@ -154,6 +154,11 @@ class Core(
      * configuration (see build variants).
      */
     val engine: Engine by lazyMonitored {
+        val clearColor = ContextCompat.getColor(context, if (context.settings().shouldUseOledTheme) {
+            R.color.fx_mobile_layer_color_1_oled
+        } else {
+            R.color.fx_mobile_layer_color_1
+        })
         val defaultSettings = DefaultSettings(
             requestInterceptor = requestInterceptor,
             remoteDebuggingEnabled = context.settings().isRemoteDebuggingEnabled &&
@@ -168,10 +173,11 @@ class Core(
             forceUserScalableContent = context.settings().forceEnableZoom,
             loginAutofillEnabled = context.settings().shouldAutofillLogins,
             enterpriseRootsEnabled = context.settings().allowThirdPartyRootCerts,
-            clearColor = ContextCompat.getColor(
-                context,
-                R.color.fx_mobile_layer_color_1,
-            ),
+//            clearColor = ContextCompat.getColor(
+//                context,
+//                R.color.fx_mobile_layer_color_1,
+//            ),
+            clearColor = clearColor,
             httpsOnlyMode = context.settings().getHttpsOnlyMode(),
             dohSettingsMode = context.settings().getDohSettingsMode(),
             dohProviderUrl = context.settings().dohProviderUrl,
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/customtabs/FennecWebAppIntentProcessor.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/customtabs/FennecWebAppIntentProcessor.kt
index c678b1928b..9c9fef76b6 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/customtabs/FennecWebAppIntentProcessor.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/customtabs/FennecWebAppIntentProcessor.kt
@@ -29,6 +29,7 @@ import org.json.JSONException
 import org.json.JSONObject
 import org.mozilla.fenix.R
 import org.mozilla.fenix.perf.runBlockingIncrement
+import org.mozilla.fenix.theme.ThemeManager
 import java.io.File
 import java.io.IOException
 
@@ -143,7 +144,7 @@ class FennecWebAppIntentProcessor(
         return CustomTabConfig(
             colorSchemes = ColorSchemes(
                 defaultColorSchemeParams = ColorSchemeParams(
-                    toolbarColor = ContextCompat.getColor(context, R.color.fx_mobile_layer_color_1),
+                    toolbarColor = ThemeManager.resolveAttributeColor(R.attr.layer1, context),
                 ),
             ),
         )
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/home/sessioncontrol/viewholders/NoCollectionsMessageViewHolder.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/home/sessioncontrol/viewholders/NoCollectionsMessageViewHolder.kt
index 5c93ab4a33..298a59f6b7 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/home/sessioncontrol/viewholders/NoCollectionsMessageViewHolder.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/home/sessioncontrol/viewholders/NoCollectionsMessageViewHolder.kt
@@ -22,6 +22,7 @@ import org.mozilla.fenix.databinding.NoCollectionsMessageBinding
 import org.mozilla.fenix.ext.increaseTapArea
 import org.mozilla.fenix.ext.isSystemInDarkTheme
 import org.mozilla.fenix.home.sessioncontrol.CollectionInteractor
+import org.mozilla.fenix.theme.ThemeManager
 import org.mozilla.fenix.utils.view.ViewHolder
 
 class NoCollectionsMessageViewHolder(
@@ -88,7 +89,7 @@ class NoCollectionsMessageViewHolder(
                         R.color.fx_mobile_text_color_action_primary,
                     )
                     wallpaperState.runIfWallpaperCardColorsAreAvailable { _, _ ->
-                        buttonColor = ContextCompat.getColor(view.context, R.color.fx_mobile_layer_color_1)
+                        buttonColor = ThemeManager.resolveAttributeColor(R.attr.layer1, view.context)
 
                         if (!view.context.isSystemInDarkTheme()) {
                             buttonTextColor = ContextCompat.getColor(
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/home/topsites/TopSiteItemViewHolder.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/home/topsites/TopSiteItemViewHolder.kt
index 6f0c3e7020..dcd0024ed7 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/home/topsites/TopSiteItemViewHolder.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/home/topsites/TopSiteItemViewHolder.kt
@@ -34,6 +34,7 @@ import org.mozilla.fenix.ext.components
 import org.mozilla.fenix.ext.isSystemInDarkTheme
 import org.mozilla.fenix.ext.loadIntoView
 import org.mozilla.fenix.home.sessioncontrol.TopSiteInteractor
+import org.mozilla.fenix.theme.ThemeManager
 import org.mozilla.fenix.utils.view.ViewHolder
 
 @SuppressLint("ClickableViewAccessibility")
@@ -92,7 +93,7 @@ class TopSiteItemViewHolder(
             flow.map { state -> state.wallpaperState }
                 .distinctUntilChanged()
                 .collect { currentState ->
-                    var backgroundColor = ContextCompat.getColor(view.context, R.color.fx_mobile_layer_color_2)
+                    var backgroundColor = ThemeManager.resolveAttributeColor(R.attr.layer2, view.context)
 
                     currentState.runIfWallpaperCardColorsAreAvailable { cardColorLight, cardColorDark ->
                         backgroundColor = if (view.context.isSystemInDarkTheme()) {
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/CustomizationFragment.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/CustomizationFragment.kt
index c1428b2898..3d6f7bd694 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/CustomizationFragment.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/CustomizationFragment.kt
@@ -34,6 +34,7 @@ import org.mozilla.fenix.utils.view.addToRadioGroup
 class CustomizationFragment : PreferenceFragmentCompat() {
     private lateinit var radioLightTheme: RadioButtonPreference
     private lateinit var radioDarkTheme: RadioButtonPreference
+    private lateinit var radioOledTheme: RadioButtonPreference
     private lateinit var radioAutoBatteryTheme: RadioButtonPreference
     private lateinit var radioFollowDeviceTheme: RadioButtonPreference
 
@@ -52,6 +53,7 @@ class CustomizationFragment : PreferenceFragmentCompat() {
         bindFollowDeviceTheme()
         bindDarkTheme()
         bindLightTheme()
+        bindOledTheme()
         bindAutoBatteryTheme()
         setupRadioGroups()
         val tabletAndTabStripEnabled = requireContext().isTabStripEnabled()
@@ -74,6 +76,7 @@ class CustomizationFragment : PreferenceFragmentCompat() {
         addToRadioGroup(
             radioLightTheme,
             radioDarkTheme,
+            radioOledTheme,
             if (SDK_INT >= Build.VERSION_CODES.P) {
                 radioFollowDeviceTheme
             } else {
@@ -96,6 +99,13 @@ class CustomizationFragment : PreferenceFragmentCompat() {
         }
     }
 
+    private fun bindOledTheme() {
+        radioOledTheme = requirePreference(R.string.pref_key_oled_theme)
+        radioOledTheme.onClickListener {
+            setNewTheme(AppCompatDelegate.MODE_NIGHT_YES)
+        }
+    }
+
     private fun bindDarkTheme() {
         radioDarkTheme = requirePreference(R.string.pref_key_dark_theme)
         radioDarkTheme.onClickListener {
@@ -118,8 +128,9 @@ class CustomizationFragment : PreferenceFragmentCompat() {
     }
 
     private fun setNewTheme(mode: Int) {
-        if (AppCompatDelegate.getDefaultNightMode() == mode) return
-        AppCompatDelegate.setDefaultNightMode(mode)
+        if (AppCompatDelegate.getDefaultNightMode() != mode) {
+            AppCompatDelegate.setDefaultNightMode(mode)
+        }
         activity?.recreate()
         with(requireComponents.core) {
             engine.settings.preferredColorScheme = getPreferredColorScheme()
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/theme/FirefoxTheme.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/theme/FirefoxTheme.kt
index 3d0c419e88..5b1eb7692d 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/theme/FirefoxTheme.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/theme/FirefoxTheme.kt
@@ -13,11 +13,13 @@ import mozilla.components.compose.base.theme.AcornTheme
 import mozilla.components.compose.base.theme.AcornTypography
 import mozilla.components.compose.base.theme.acornDarkColorScheme
 import mozilla.components.compose.base.theme.acornLightColorScheme
+import mozilla.components.compose.base.theme.acornOledColorScheme
 import mozilla.components.compose.base.theme.acornPrivateColorScheme
 import mozilla.components.compose.base.theme.darkColorPalette
 import mozilla.components.compose.base.theme.layout.AcornLayout
 import mozilla.components.compose.base.theme.layout.AcornWindowSize
 import mozilla.components.compose.base.theme.lightColorPalette
+import mozilla.components.compose.base.theme.oledColorPalette
 import mozilla.components.compose.base.theme.privateColorPalette
 import mozilla.components.compose.base.utils.inComposePreview
 import org.mozilla.fenix.ext.settings
@@ -36,12 +38,14 @@ fun FirefoxTheme(
     val colors: AcornColors = when (theme) {
         Theme.Light -> lightColorPalette
         Theme.Dark -> darkColorPalette
+        Theme.Oled -> oledColorPalette
         Theme.Private -> privateColorPalette
     }
 
     val colorScheme: ColorScheme = when (theme) {
         Theme.Light -> acornLightColorScheme()
         Theme.Dark -> acornDarkColorScheme()
+        Theme.Oled -> acornOledColorScheme()
         Theme.Private -> acornPrivateColorScheme()
     }
 
@@ -58,6 +62,7 @@ fun FirefoxTheme(
 enum class Theme {
     Light,
     Dark,
+    Oled,
     Private,
     ;
 
@@ -77,7 +82,11 @@ enum class Theme {
             ) {
                 Private
             } else if (isSystemInDarkTheme()) {
-                Dark
+                if (LocalContext.current.settings().shouldUseOledTheme) {
+                    Oled
+                } else {
+                    Dark
+                }
             } else {
                 Light
             }
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/theme/ThemeManager.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/theme/ThemeManager.kt
index 293b7e3c8e..97d443505e 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/theme/ThemeManager.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/theme/ThemeManager.kt
@@ -14,10 +14,13 @@ import android.os.Build.VERSION.SDK_INT
 import android.util.TypedValue
 import android.view.Window
 import androidx.annotation.AnyRes
+import androidx.annotation.AttrRes
+import androidx.annotation.ColorInt
 import androidx.annotation.StyleRes
 import androidx.compose.runtime.Composable
 import androidx.compose.ui.platform.LocalContext
 import androidx.compose.ui.res.colorResource
+import androidx.core.content.ContextCompat
 import mozilla.components.support.ktx.android.content.getColorFromAttr
 import mozilla.components.support.ktx.android.content.getStatusBarColor
 import mozilla.components.support.ktx.android.view.createWindowInsetsController
@@ -27,9 +30,11 @@ import org.mozilla.fenix.HomeActivity
 import org.mozilla.fenix.R
 import org.mozilla.fenix.browser.browsingmode.BrowsingMode
 import org.mozilla.fenix.customtabs.ExternalAppBrowserActivity
+import org.mozilla.fenix.ext.settings
 
 abstract class ThemeManager {
 
+    protected abstract val activity: Activity
     abstract var currentTheme: BrowsingMode
 
     /**
@@ -37,7 +42,11 @@ abstract class ThemeManager {
      */
     @get:StyleRes
     val currentThemeResource get() = when (currentTheme) {
-        BrowsingMode.Normal -> R.style.NormalTheme
+        BrowsingMode.Normal -> if (activity.settings().shouldUseOledTheme) {
+            R.style.IronFox_OLEDTheme
+        } else {
+            R.style.NormalTheme
+        }
         BrowsingMode.Private -> R.style.PrivateTheme
     }
 
@@ -99,6 +108,12 @@ abstract class ThemeManager {
             return typedValue.resourceId
         }
 
+        @ColorInt
+        fun resolveAttributeColor(@AttrRes attribute: Int, context: Context): Int {
+            val resourceId = resolveAttribute(attribute, context)
+            return ContextCompat.getColor(context, resourceId)
+        }
+
         @Composable
         fun resolveAttributeColor(attribute: Int): androidx.compose.ui.graphics.Color {
             val resourceId = resolveAttribute(attribute, LocalContext.current)
@@ -152,7 +167,7 @@ abstract class ThemeManager {
 
 class DefaultThemeManager(
     currentTheme: BrowsingMode,
-    private val activity: Activity,
+    override val activity: Activity,
 ) : ThemeManager() {
     override var currentTheme: BrowsingMode = currentTheme
         set(value) {
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
index 774d43efab..a78f05bcaa 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
@@ -827,6 +827,11 @@ class Settings(private val appContext: Context) : PreferencesHolder {
         default = false,
     )
 
+    var shouldUseOledTheme by booleanPreference(
+        appContext.getPreferenceKey(R.string.pref_key_oled_theme),
+        default = false,
+    )
+
     var shouldUseHttpsOnly by booleanPreference(
         appContext.getPreferenceKey(R.string.pref_key_https_only),
         default = false,
diff --git a/mobile/android/fenix/app/src/main/res/drawable/home_bottom_bar_background.xml b/mobile/android/fenix/app/src/main/res/drawable/home_bottom_bar_background.xml
index ea99799d42..80ed1401b8 100644
--- a/mobile/android/fenix/app/src/main/res/drawable/home_bottom_bar_background.xml
+++ b/mobile/android/fenix/app/src/main/res/drawable/home_bottom_bar_background.xml
@@ -6,7 +6,7 @@
 <layer-list xmlns:android="http://schemas.android.com/apk/res/android">
 <item>
     <shape>
-        <solid android:color="@color/fx_mobile_layer_color_1" />
+        <solid android:color="?attr/layer1" />
     </shape>
 </item>
 <item android:bottom="-2dp" android:left="-2dp" android:right="-2dp">
diff --git a/mobile/android/fenix/app/src/main/res/drawable/home_bottom_bar_background_no_divider.xml b/mobile/android/fenix/app/src/main/res/drawable/home_bottom_bar_background_no_divider.xml
index 5a2c61c89d..4bc14e53bd 100644
--- a/mobile/android/fenix/app/src/main/res/drawable/home_bottom_bar_background_no_divider.xml
+++ b/mobile/android/fenix/app/src/main/res/drawable/home_bottom_bar_background_no_divider.xml
@@ -5,7 +5,7 @@
 <layer-list xmlns:android="http://schemas.android.com/apk/res/android">
 <item>
     <shape>
-        <solid android:color="@color/fx_mobile_layer_color_1" />
+        <solid android:color="?attr/layer1" />
     </shape>
 </item>
 </layer-list>
diff --git a/mobile/android/fenix/app/src/main/res/drawable/home_bottom_bar_background_top.xml b/mobile/android/fenix/app/src/main/res/drawable/home_bottom_bar_background_top.xml
index 11e8ca17bb..f8e805ca2a 100644
--- a/mobile/android/fenix/app/src/main/res/drawable/home_bottom_bar_background_top.xml
+++ b/mobile/android/fenix/app/src/main/res/drawable/home_bottom_bar_background_top.xml
@@ -6,7 +6,7 @@
 <layer-list xmlns:android="http://schemas.android.com/apk/res/android">
 <item>
     <shape>
-        <solid android:color="@color/fx_mobile_layer_color_1" />
+        <solid android:color="?attr/layer1" />
     </shape>
 </item>
 <item android:top="-2dp" android:left="-2dp" android:right="-2dp">
diff --git a/mobile/android/fenix/app/src/main/res/drawable/recent_apps_background.xml b/mobile/android/fenix/app/src/main/res/drawable/recent_apps_background.xml
index 8149bfee3c..9f8677e08c 100644
--- a/mobile/android/fenix/app/src/main/res/drawable/recent_apps_background.xml
+++ b/mobile/android/fenix/app/src/main/res/drawable/recent_apps_background.xml
@@ -3,6 +3,6 @@
    - License, v. 2.0. If a copy of the MPL was not distributed with this
    - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
 <shape xmlns:android="http://schemas.android.com/apk/res/android">
-    <solid android:color="@color/fx_mobile_layer_color_1"/>
+    <solid android:color="?attr/layer1"/>
     <corners android:radius="@dimen/share_recent_apps_background_radius"/>
 </shape>
diff --git a/mobile/android/fenix/app/src/main/res/drawable/rounded_search_widget_background.xml b/mobile/android/fenix/app/src/main/res/drawable/rounded_search_widget_background.xml
index 4cd3c13437..bc8547a8ad 100644
--- a/mobile/android/fenix/app/src/main/res/drawable/rounded_search_widget_background.xml
+++ b/mobile/android/fenix/app/src/main/res/drawable/rounded_search_widget_background.xml
@@ -4,6 +4,6 @@
    - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
 
 <shape xmlns:android="http://schemas.android.com/apk/res/android">
-    <solid android:color="@color/fx_mobile_layer_color_1" />
+    <solid android:color="?attr/layer1" />
     <corners android:radius="@dimen/tab_corner_radius"/>
 </shape>
diff --git a/mobile/android/fenix/app/src/main/res/drawable/toolbar_background_no_divider.xml b/mobile/android/fenix/app/src/main/res/drawable/toolbar_background_no_divider.xml
index eb23393ffb..92983b9058 100644
--- a/mobile/android/fenix/app/src/main/res/drawable/toolbar_background_no_divider.xml
+++ b/mobile/android/fenix/app/src/main/res/drawable/toolbar_background_no_divider.xml
@@ -4,5 +4,5 @@
    - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
 <shape xmlns:android="http://schemas.android.com/apk/res/android"
     android:shape="rectangle">
-    <solid android:color="@color/fx_mobile_layer_color_1" />
+    <solid android:color="?attr/layer1" />
 </shape>
diff --git a/mobile/android/fenix/app/src/main/res/values-night-v23/styles.xml b/mobile/android/fenix/app/src/main/res/values-night-v23/styles.xml
index cbc9729419..448bbdf89e 100644
--- a/mobile/android/fenix/app/src/main/res/values-night-v23/styles.xml
+++ b/mobile/android/fenix/app/src/main/res/values-night-v23/styles.xml
@@ -14,6 +14,6 @@
         <item name="android:windowLightStatusBar">false</item>
 
         <!-- Style the navigation bar -->
-        <item name="android:navigationBarColor">@color/fx_mobile_layer_color_1</item>
+        <item name="android:navigationBarColor">?attr/layer1</item>
     </style>
 </resources>
diff --git a/mobile/android/fenix/app/src/main/res/values-v27/styles.xml b/mobile/android/fenix/app/src/main/res/values-v27/styles.xml
index 4e0eddedc9..bab5fa460e 100644
--- a/mobile/android/fenix/app/src/main/res/values-v27/styles.xml
+++ b/mobile/android/fenix/app/src/main/res/values-v27/styles.xml
@@ -57,6 +57,6 @@
     <style name="TabTrayDialogStyle" parent="TabTrayDialogStyleBase">
         <item name="android:navigationBarDividerColor">@android:color/transparent</item>
         <item name="android:windowLightNavigationBar">@bool/theme_is_light</item>
-        <item name="android:navigationBarColor">@color/fx_mobile_layer_color_1</item>
+        <item name="android:navigationBarColor">?attr/layer1</item>
     </style>
 </resources>
diff --git a/mobile/android/fenix/app/src/main/res/values/styles.xml b/mobile/android/fenix/app/src/main/res/values/styles.xml
index ebaec70a21..3e3492d107 100644
--- a/mobile/android/fenix/app/src/main/res/values/styles.xml
+++ b/mobile/android/fenix/app/src/main/res/values/styles.xml
@@ -60,6 +60,7 @@
         <!-- Action -->
         <!-- Primary button, Snackbar, Floating action button, Chip selected -->
         <item name="actionPrimary">@color/fx_mobile_action_color_primary</item>
+        <item name="actionSecondary">@color/fx_mobile_action_color_secondary</item>
         <!-- Primary button in a disabled state -->
         <item name="actionPrimaryDisabled">@color/fx_mobile_action_color_primary_disabled</item>
         <!-- Selected chip -->
@@ -379,7 +380,7 @@
         <item name="android:layout_height">48dp</item>
         <item name="android:textStyle">bold</item>
         <item name="android:textAllCaps">false</item>
-        <item name="backgroundTint">@color/fx_mobile_action_color_secondary</item>
+        <item name="backgroundTint">?attr/actionSecondary</item>
         <item name="android:textColor">@color/fx_mobile_text_color_action_secondary</item>
         <item name="rippleColor">?attr/textSecondary</item>
         <item name="android:letterSpacing">0</item>
@@ -647,7 +648,7 @@
     <!-- Tab Tray does not present a private theme, so it needs to be separate from other bottom sheet styles -->
     <style name="TabTrayDialogStyleBase" parent="BottomSheetBase">
         <item name="bottomSheetStyle">@style/BottomSheetModal</item>
-        <item name="android:colorBackground">@color/fx_mobile_layer_color_1</item>
+        <item name="android:colorBackground">?attr/layer1</item>
     </style>
 
     <style name="TabTrayDialogStyle" parent="TabTrayDialogStyleBase" />
diff --git a/mobile/android/fenix/app/src/main/res/xml/customization_preferences.xml b/mobile/android/fenix/app/src/main/res/xml/customization_preferences.xml
index a24d1b7b2b..9cfc5c8840 100644
--- a/mobile/android/fenix/app/src/main/res/xml/customization_preferences.xml
+++ b/mobile/android/fenix/app/src/main/res/xml/customization_preferences.xml
@@ -19,6 +19,11 @@
             android:key="@string/pref_key_dark_theme"
             android:title="@string/preference_dark_theme" />
 
+        <org.mozilla.fenix.settings.RadioButtonPreference
+            android:defaultValue="false"
+            android:key="@string/pref_key_oled_theme"
+            android:title="@string/preference_oled_theme" />
+
         <org.mozilla.fenix.settings.RadioButtonPreference
             android:defaultValue="false"
             android:key="@string/pref_key_auto_battery_theme"
