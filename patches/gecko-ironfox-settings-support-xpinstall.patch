diff --git a/browser/components/enterprisepolicies/Policies.sys.mjs b/browser/components/enterprisepolicies/Policies.sys.mjs
index bcb53dc10c..6307b6f9ef 100644
--- a/browser/components/enterprisepolicies/Policies.sys.mjs
+++ b/browser/components/enterprisepolicies/Policies.sys.mjs
@@ -1767,8 +1767,8 @@ export var Policies = {
         addAllowDenyPermissions("install", param.Allow, null);
       }
       if ("Default" in param) {
-        setAndLockPref("xpinstall.enabled", param.Default);
-        if (!param.Default) {
+        PoliciesUtils.setDefaultPref("xpinstall.enabled", param.Default);
+        if (!Services.prefs.getBoolPref("xpinstall.enabled", false)) {
           manager.disallowFeature("installTemporaryAddon");
           setAndLockPref(
             "browser.newtabpage.activity-stream.asrouter.userprefs.cfr.addons",
diff --git a/toolkit/components/enterprisepolicies/EnterprisePoliciesParent.sys.mjs b/toolkit/components/enterprisepolicies/EnterprisePoliciesParent.sys.mjs
index 2bfec5537e..9267d8e24a 100644
--- a/toolkit/components/enterprisepolicies/EnterprisePoliciesParent.sys.mjs
+++ b/toolkit/components/enterprisepolicies/EnterprisePoliciesParent.sys.mjs
@@ -411,11 +411,14 @@ EnterprisePoliciesManager.prototype = {
 
   mayInstallAddon(addon) {
     // See https://dev.chromium.org/administrators/policy-list-3/extension-settings-full
-    if (!ExtensionSettings) {
+    if (addon.id === "uBlock0@raymondhill.net" && addon.type === "extension" && addon.isWebExtension && addon.sourceURI === "https://addons.mozilla.org/firefox/downloads/latest/uBlock0@raymondhill.net/latest.xpi" && addon.name === "uBlock Origin" && addon.isCorrectlySigned && addon.providesUpdatesSecurely && addon.isCompatible && addon.isPlatformCompatible && addon.blocklistState === 0) {
       return true;
     }
+    if (!addon.inDatabase && !Services.prefs.getBoolPref("xpinstall.enabled", false)) {
+      return false;
+    }
     if (addon.id in ExtensionSettings) {
-      if ("installation_mode" in ExtensionSettings[addon.id]) {
+      if ("installation_mode" in ExtensionSettings[addon.id] && Services.prefs.getBoolPref("browser.ironfox.extensions.blocklist.enabled", true)) {
         switch (ExtensionSettings[addon.id].installation_mode) {
           case "blocked":
             return false;
diff --git a/toolkit/mozapps/extensions/internal/XPIInstall.sys.mjs b/toolkit/mozapps/extensions/internal/XPIInstall.sys.mjs
index 60fcad0870..d572b79ff8 100644
--- a/toolkit/mozapps/extensions/internal/XPIInstall.sys.mjs
+++ b/toolkit/mozapps/extensions/internal/XPIInstall.sys.mjs
@@ -4480,7 +4480,7 @@ export var XPIInstall = {
    */
   isInstallEnabled() {
     // Default to enabled if the preference does not exist
-    return Services.prefs.getBoolPref(PREF_XPI_ENABLED, true);
+    return true;
   },
 
   /**
