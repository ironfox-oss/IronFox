diff --git a/mobile/android/fenix/app/src/main/java/org/ironfoxoss/ironfox/NoopCrashService.kt b/mobile/android/fenix/app/src/main/java/org/ironfoxoss/ironfox/NoopCrashService.kt
new file mode 100644
index 0000000000..9dc712c3ff
--- /dev/null
+++ b/mobile/android/fenix/app/src/main/java/org/ironfoxoss/ironfox/NoopCrashService.kt
@@ -0,0 +1,23 @@
+/* Hi, I'm a stub. ;) */
+
+/* Based on https://github.com/ghostery/user-agent-android/blob/b634c81054bfdf378ef1c6668053cb043995a6a1/patches/0011-Disabling-Telemetry-CrashReports.patch (MPL-2.0) */
+
+package org.ironfoxoss.ironfox
+
+import mozilla.components.lib.crash.Crash
+import mozilla.components.lib.crash.service.CrashReporterService
+import mozilla.components.concept.base.crash.Breadcrumb
+
+class NoopCrashService : CrashReporterService {
+    override val id: String = ""
+
+    override val name: String = ""
+
+    override fun createCrashReportUrl(identifier: String): String? = null
+
+    override fun report(throwable: Throwable, breadcrumbs: ArrayList<Breadcrumb>): String? = null
+
+    override fun report(crash: Crash.NativeCodeCrash): String? = null
+
+    override fun report(crash: Crash.UncaughtExceptionCrash): String? = null
+}
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/debugsettings/navigation/DebugDrawerRoute.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/debugsettings/navigation/DebugDrawerRoute.kt
index 8d4b2daebe..ed1ee81cf8 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/debugsettings/navigation/DebugDrawerRoute.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/debugsettings/navigation/DebugDrawerRoute.kt
@@ -65,10 +65,10 @@ enum class DebugDrawerRoute(val route: String, @param:StringRes val title: Int)
         route = "addons_debug_tools",
         title = R.string.debug_drawer_addons_tools_title,
     ),
-    CrashDebugTools(
+/*    CrashDebugTools(
         route = "crash_debug_tools",
         title = R.string.crash_debug_tools_title,
-    ),
+    ),*/
     ;
 
     companion object {
@@ -173,14 +173,14 @@ enum class DebugDrawerRoute(val route: String, @param:StringRes val title: Int)
                         }
                     }
 
-                    CrashDebugTools -> {
+/*                    CrashDebugTools -> {
                         onClick = {
                             debugDrawerStore.dispatch(DebugDrawerAction.NavigateTo.CrashDebugTools)
                         }
                         content = {
                             CrashTools()
                         }
-                    }
+                    }*/
                 }
 
                 DebugDrawerDestination(
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/debugsettings/store/DebugDrawerNavigationMiddleware.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/debugsettings/store/DebugDrawerNavigationMiddleware.kt
index 1e17f81bda..a5b7e6c84e 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/debugsettings/store/DebugDrawerNavigationMiddleware.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/debugsettings/store/DebugDrawerNavigationMiddleware.kt
@@ -50,7 +50,7 @@ class DebugDrawerNavigationMiddleware(
                 is DebugDrawerAction.NavigateTo.AddonsDebugTools ->
                     navController.navigate(route = DebugDrawerRoute.AddonsDebugTools.route)
                 is DebugDrawerAction.NavigateTo.CrashDebugTools ->
-                    navController.navigate(route = DebugDrawerRoute.CrashDebugTools.route)
+                    Unit // no-op
                 is DebugDrawerAction.OnBackPressed -> navController.popBackStack()
                 is DebugDrawerAction.DrawerOpened, DebugDrawerAction.DrawerClosed -> Unit // no-op
             }
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/FenixApplication.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/FenixApplication.kt
index 29cd599a82..c4ffdae38f 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/FenixApplication.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/FenixApplication.kt
@@ -86,8 +86,8 @@ import org.mozilla.fenix.components.appstate.AppAction
 import org.mozilla.fenix.components.initializeGlean
 import org.mozilla.fenix.components.metrics.MozillaProductDetector
 import org.mozilla.fenix.components.startMetricsIfEnabled
-import org.mozilla.fenix.crashes.StartupCrashCanary
-import org.mozilla.fenix.experiments.maybeFetchExperiments
+// import org.mozilla.fenix.crashes.StartupCrashCanary
+// import org.mozilla.fenix.experiments.maybeFetchExperiments
 import org.mozilla.fenix.ext.components
 import org.mozilla.fenix.ext.containsQueryParameters
 import org.mozilla.fenix.ext.isCustomEngine
@@ -150,7 +150,7 @@ open class FenixApplication : LocaleAwareApplication(), Provider {
      * flow. See [HomeActivity.onCreate] for more context.
      */
     open fun initializeWithStartupCrashCheck() {
-        if (StartupCrashCanary.build(applicationContext).startupCrashDetected) {
+        if (false) {
             setupInAllProcesses()
         } else {
             initialize()
@@ -510,18 +510,18 @@ open class FenixApplication : LocaleAwareApplication(), Provider {
     }
 
     private fun setupCrashReporting() {
-        components
+/*        components
             .analytics
             .crashReporter
-            .install(this, ::handleCaughtException)
+            .install(this, ::handleCaughtException)*/
     }
 
     private fun handleCaughtException() {
-        if (isMainProcess() && !components.performance.visualCompletenessQueue.isReady()) {
+/*        if (isMainProcess() && !components.performance.visualCompletenessQueue.isReady()) {
             CoroutineScope(IO).launch {
                 StartupCrashCanary.build(applicationContext).createCanary()
             }
-        }
+        }*/
     }
 
     protected open fun initializeNimbus() {
@@ -549,7 +549,7 @@ open class FenixApplication : LocaleAwareApplication(), Provider {
      */
     private fun beginSetupMegazord() {
         // Rust components must be initialized at the very beginning, before any other Rust call, ...
-        AppServicesInitializer.init(components.analytics.crashReporter)
+        AppServicesInitializer.init()
     }
 
     @OptIn(DelicateCoroutinesApi::class) // GlobalScope usage
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/search/BrowserToolbarSearchMiddleware.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/search/BrowserToolbarSearchMiddleware.kt
index 410981e1ed..d9e71652d4 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/search/BrowserToolbarSearchMiddleware.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/search/BrowserToolbarSearchMiddleware.kt
@@ -231,14 +231,14 @@ class BrowserToolbarSearchMiddleware(
                 val navController = environment?.navController ?: return
 
                 when (action.text) {
-                    "about:crashes" -> {
+/*                    "about:crashes" -> {
                         // The list of past crashes can be accessed via "settings > about", but desktop and
                         // fennec users may be used to navigating to "about:crashes". So we intercept this here
                         // and open the crash list activity instead.
                         navController.navigate(
                             NavGraphDirections.actionGlobalCrashListFragment(),
                         )
-                    }
+                    }*/
                     "about:addons" -> {
                         navController.navigate(
                             NavGraphDirections.actionGlobalAddonsManagementFragment(),
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/search/SearchDialogController.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/search/SearchDialogController.kt
index 819b24954e..0f9bb0a905 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/search/SearchDialogController.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/search/SearchDialogController.kt
@@ -83,13 +83,13 @@ class SearchDialogController(
         }
 
         when (url) {
-            "about:crashes" -> {
+/*            "about:crashes" -> {
                 // The list of past crashes can be accessed via "settings > about", but desktop and
                 // fennec users may be used to navigating to "about:crashes". So we intercept this here
                 // and open the crash list activity instead.
                 val directions = SearchDialogFragmentDirections.actionCrashListFragment()
                 navController.navigate(directions)
-            }
+            }*/
             "about:addons" -> {
                 val directions =
                     SearchDialogFragmentDirections.actionGlobalAddonsManagementFragment()
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SecretSettingsFragment.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SecretSettingsFragment.kt
index c518b78ce9..88f774ed3e 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SecretSettingsFragment.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SecretSettingsFragment.kt
@@ -274,7 +274,7 @@ class SecretSettingsFragment : PreferenceFragmentCompat() {
         }
 
         requirePreference<SwitchPreference>(R.string.pref_key_use_new_crash_reporter).apply {
-            isVisible = true
+            isVisible = false
             isChecked = context.settings().useNewCrashReporterDialog
             onPreferenceChangeListener =
                 Preference.OnPreferenceChangeListener { _, newValue ->
@@ -342,7 +342,7 @@ class SecretSettingsFragment : PreferenceFragmentCompat() {
         }
 
         requirePreference<SwitchPreference>(R.string.pref_key_crash_pull_never_show_again).apply {
-            isVisible = true
+            isVisible = false
             isChecked = context.settings().crashPullNeverShowAgain
             onPreferenceChangeListener = SharedPreferenceUpdater()
         }
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
index 312b5b3de3..d84539593d 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
@@ -565,7 +565,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
 
     var crashReportChoice by stringPreference(
         appContext.getPreferenceKey(R.string.pref_key_crash_reporting_choice),
-        default = CrashReportOption.Ask.toString(),
+        default = CrashReportOption.Never.toString(),
     )
 
     val isRemoteDebuggingEnabled by booleanPreference(
@@ -926,7 +926,7 @@ class Settings(private val appContext: Context) : PreferencesHolder {
      */
     var crashPullNeverShowAgain: Boolean by booleanPreference(
         appContext.getPreferenceKey(R.string.pref_key_crash_pull_never_show_again),
-        default = false,
+        default = true,
     )
 
     @VisibleForTesting
