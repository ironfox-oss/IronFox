diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/gecko/GeckoProvider.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/gecko/GeckoProvider.kt
index a754afa5a4..48ea595728 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/gecko/GeckoProvider.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/gecko/GeckoProvider.kt
@@ -72,13 +72,13 @@ object GeckoProvider {
             ),
         )
 
-        geckoRuntime.crashPullDelegate = GeckoCrashPullDelegate(
+/*        geckoRuntime.crashPullDelegate = GeckoCrashPullDelegate(
             dispatcher = { crashIDs ->
                 context.components.appStore.dispatch(
                     AppAction.CrashActionWrapper(CrashAction.CheckDeferred(crashIDs.toList())),
                 )
             },
-        )
+        )*/
 
         return geckoRuntime
     }
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/search/SearchDialogController.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/search/SearchDialogController.kt
index 819b24954e..0f9bb0a905 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/search/SearchDialogController.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/search/SearchDialogController.kt
@@ -83,13 +83,13 @@ class SearchDialogController(
         }
 
         when (url) {
-            "about:crashes" -> {
+/*            "about:crashes" -> {
                 // The list of past crashes can be accessed via "settings > about", but desktop and
                 // fennec users may be used to navigating to "about:crashes". So we intercept this here
                 // and open the crash list activity instead.
                 val directions = SearchDialogFragmentDirections.actionCrashListFragment()
                 navController.navigate(directions)
-            }
+            }*/
             "about:addons" -> {
                 val directions =
                     SearchDialogFragmentDirections.actionGlobalAddonsManagementFragment()
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SecretSettingsFragment.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SecretSettingsFragment.kt
index 9113dc53a9..b92ecfb0be 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SecretSettingsFragment.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/settings/SecretSettingsFragment.kt
@@ -244,7 +244,7 @@ class SecretSettingsFragment : PreferenceFragmentCompat() {
         }
 
         requirePreference<SwitchPreference>(R.string.pref_key_crash_pull_never_show_again).apply {
-            isVisible = true
+            isVisible = false
             isChecked = context.settings().crashPullNeverShowAgain
             onPreferenceChangeListener = SharedPreferenceUpdater()
         }
diff --git a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
index 3fa564af49..861f5c38a8 100644
--- a/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
+++ b/mobile/android/fenix/app/src/main/java/org/mozilla/fenix/utils/Settings.kt
@@ -495,10 +495,10 @@ class Settings(private val appContext: Context) : PreferencesHolder {
                 true,
             )
 
-    var crashReportChoice by stringPreference(
-        appContext.getPreferenceKey(R.string.pref_key_crash_reporting_choice),
-        default = CrashReportOption.Ask.toString(),
-    )
+    var crashReportChoice = CrashReportOption.Never.toString()
+//        appContext.getPreferenceKey(R.string.pref_key_crash_reporting_choice),
+//        default = CrashReportOption.Ask.toString(),
+//    )
 
     val isRemoteDebuggingEnabled by booleanPreference(
         appContext.getPreferenceKey(R.string.pref_key_remote_debugging),
@@ -776,10 +776,10 @@ class Settings(private val appContext: Context) : PreferencesHolder {
      * Indicates if the user denies to ever see again the Remote Settings crash
      * pull UI.
      */
-    var crashPullNeverShowAgain: Boolean by booleanPreference(
-        appContext.getPreferenceKey(R.string.pref_key_crash_pull_never_show_again),
-        default = false,
-    )
+    var crashPullNeverShowAgain: Boolean = true
+//        appContext.getPreferenceKey(R.string.pref_key_crash_pull_never_show_again),
+//        default = false,
+//    )
 
     @VisibleForTesting
     internal fun timeNowInMillis(): Long = System.currentTimeMillis()
